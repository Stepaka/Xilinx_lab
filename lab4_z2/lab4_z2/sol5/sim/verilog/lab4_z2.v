// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lab4_z2_lab4_z2,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12t-csg325-1Q,HLS_INPUT_CLOCK=14.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=12.774000,HLS_SYN_LAT=67,HLS_SYN_TPT=34,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=44,HLS_SYN_LUT=293,HLS_VERSION=2021_2}" *)

module lab4_z2 (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        data_in_address0,
        data_in_ce0,
        data_in_d0,
        data_in_q0,
        data_in_we0,
        data_in_address1,
        data_in_ce1,
        data_in_d1,
        data_in_q1,
        data_in_we1,
        scale,
        data_out1_address0,
        data_out1_ce0,
        data_out1_d0,
        data_out1_q0,
        data_out1_we0,
        data_out1_address1,
        data_out1_ce1,
        data_out1_d1,
        data_out1_q1,
        data_out1_we1,
        data_out2_address0,
        data_out2_ce0,
        data_out2_d0,
        data_out2_q0,
        data_out2_we0,
        data_out2_address1,
        data_out2_ce1,
        data_out2_d1,
        data_out2_q1,
        data_out2_we1,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
output  [3:0] data_in_address0;
output   data_in_ce0;
output  [31:0] data_in_d0;
input  [31:0] data_in_q0;
output   data_in_we0;
output  [3:0] data_in_address1;
output   data_in_ce1;
output  [31:0] data_in_d1;
input  [31:0] data_in_q1;
output   data_in_we1;
input  [31:0] scale;
output  [3:0] data_out1_address0;
output   data_out1_ce0;
output  [31:0] data_out1_d0;
input  [31:0] data_out1_q0;
output   data_out1_we0;
output  [3:0] data_out1_address1;
output   data_out1_ce1;
output  [31:0] data_out1_d1;
input  [31:0] data_out1_q1;
output   data_out1_we1;
output  [3:0] data_out2_address0;
output   data_out2_ce0;
output  [31:0] data_out2_d0;
input  [31:0] data_out2_q0;
output   data_out2_we0;
output  [3:0] data_out2_address1;
output   data_out2_ce1;
output  [31:0] data_out2_d1;
input  [31:0] data_out2_q1;
output   data_out2_we1;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire   [31:0] tempA1_i_q0;
wire   [31:0] tempA1_t_q0;
wire   [31:0] tempA2_i_q0;
wire   [31:0] tempA2_t_q0;
wire    Loop_Loop1_proc_U0_ap_start;
wire    Loop_Loop1_proc_U0_ap_done;
wire    Loop_Loop1_proc_U0_ap_continue;
wire    Loop_Loop1_proc_U0_ap_idle;
wire    Loop_Loop1_proc_U0_ap_ready;
wire   [3:0] Loop_Loop1_proc_U0_data_in_address0;
wire    Loop_Loop1_proc_U0_data_in_ce0;
wire   [3:0] Loop_Loop1_proc_U0_tempA1_address0;
wire    Loop_Loop1_proc_U0_tempA1_ce0;
wire    Loop_Loop1_proc_U0_tempA1_we0;
wire   [31:0] Loop_Loop1_proc_U0_tempA1_d0;
wire   [3:0] Loop_Loop1_proc_U0_tempA2_address0;
wire    Loop_Loop1_proc_U0_tempA2_ce0;
wire    Loop_Loop1_proc_U0_tempA2_we0;
wire   [31:0] Loop_Loop1_proc_U0_tempA2_d0;
wire    ap_channel_done_tempA2;
wire    Loop_Loop1_proc_U0_tempA2_full_n;
reg    ap_sync_reg_channel_write_tempA2;
wire    ap_sync_channel_write_tempA2;
wire    ap_channel_done_tempA1;
wire    Loop_Loop1_proc_U0_tempA1_full_n;
reg    ap_sync_reg_channel_write_tempA1;
wire    ap_sync_channel_write_tempA1;
wire    Loop_Loop2_proc_U0_ap_start;
wire    Loop_Loop2_proc_U0_ap_done;
wire    Loop_Loop2_proc_U0_ap_continue;
wire    Loop_Loop2_proc_U0_ap_idle;
wire    Loop_Loop2_proc_U0_ap_ready;
wire   [3:0] Loop_Loop2_proc_U0_tempA1_address0;
wire    Loop_Loop2_proc_U0_tempA1_ce0;
wire   [3:0] Loop_Loop2_proc_U0_data_out1_address0;
wire    Loop_Loop2_proc_U0_data_out1_ce0;
wire    Loop_Loop2_proc_U0_data_out1_we0;
wire   [31:0] Loop_Loop2_proc_U0_data_out1_d0;
wire    Loop_Loop3_proc_U0_ap_start;
wire    Loop_Loop3_proc_U0_ap_done;
wire    Loop_Loop3_proc_U0_ap_continue;
wire    Loop_Loop3_proc_U0_ap_idle;
wire    Loop_Loop3_proc_U0_ap_ready;
wire   [3:0] Loop_Loop3_proc_U0_tempA2_address0;
wire    Loop_Loop3_proc_U0_tempA2_ce0;
wire   [3:0] Loop_Loop3_proc_U0_data_out2_address0;
wire    Loop_Loop3_proc_U0_data_out2_ce0;
wire    Loop_Loop3_proc_U0_data_out2_we0;
wire   [31:0] Loop_Loop3_proc_U0_data_out2_d0;
wire    tempA1_i_full_n;
wire    tempA1_t_empty_n;
wire    tempA2_i_full_n;
wire    tempA2_t_empty_n;
wire    ap_sync_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_tempA2 = 1'b0;
#0 ap_sync_reg_channel_write_tempA1 = 1'b0;
end

lab4_z2_tempA1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
tempA1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_Loop1_proc_U0_tempA1_address0),
    .i_ce0(Loop_Loop1_proc_U0_tempA1_ce0),
    .i_we0(Loop_Loop1_proc_U0_tempA1_we0),
    .i_d0(Loop_Loop1_proc_U0_tempA1_d0),
    .i_q0(tempA1_i_q0),
    .t_address0(Loop_Loop2_proc_U0_tempA1_address0),
    .t_ce0(Loop_Loop2_proc_U0_tempA1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tempA1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tempA1_i_full_n),
    .i_write(ap_channel_done_tempA1),
    .t_empty_n(tempA1_t_empty_n),
    .t_read(Loop_Loop2_proc_U0_ap_ready)
);

lab4_z2_tempA1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
tempA2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_Loop1_proc_U0_tempA2_address0),
    .i_ce0(Loop_Loop1_proc_U0_tempA2_ce0),
    .i_we0(Loop_Loop1_proc_U0_tempA2_we0),
    .i_d0(Loop_Loop1_proc_U0_tempA2_d0),
    .i_q0(tempA2_i_q0),
    .t_address0(Loop_Loop3_proc_U0_tempA2_address0),
    .t_ce0(Loop_Loop3_proc_U0_tempA2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tempA2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tempA2_i_full_n),
    .i_write(ap_channel_done_tempA2),
    .t_empty_n(tempA2_t_empty_n),
    .t_read(Loop_Loop3_proc_U0_ap_ready)
);

lab4_z2_Loop_Loop1_proc Loop_Loop1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_Loop1_proc_U0_ap_start),
    .ap_done(Loop_Loop1_proc_U0_ap_done),
    .ap_continue(Loop_Loop1_proc_U0_ap_continue),
    .ap_idle(Loop_Loop1_proc_U0_ap_idle),
    .ap_ready(Loop_Loop1_proc_U0_ap_ready),
    .data_in_address0(Loop_Loop1_proc_U0_data_in_address0),
    .data_in_ce0(Loop_Loop1_proc_U0_data_in_ce0),
    .data_in_q0(data_in_q0),
    .scale(scale),
    .tempA1_address0(Loop_Loop1_proc_U0_tempA1_address0),
    .tempA1_ce0(Loop_Loop1_proc_U0_tempA1_ce0),
    .tempA1_we0(Loop_Loop1_proc_U0_tempA1_we0),
    .tempA1_d0(Loop_Loop1_proc_U0_tempA1_d0),
    .tempA2_address0(Loop_Loop1_proc_U0_tempA2_address0),
    .tempA2_ce0(Loop_Loop1_proc_U0_tempA2_ce0),
    .tempA2_we0(Loop_Loop1_proc_U0_tempA2_we0),
    .tempA2_d0(Loop_Loop1_proc_U0_tempA2_d0)
);

lab4_z2_Loop_Loop2_proc Loop_Loop2_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_Loop2_proc_U0_ap_start),
    .ap_done(Loop_Loop2_proc_U0_ap_done),
    .ap_continue(Loop_Loop2_proc_U0_ap_continue),
    .ap_idle(Loop_Loop2_proc_U0_ap_idle),
    .ap_ready(Loop_Loop2_proc_U0_ap_ready),
    .tempA1_address0(Loop_Loop2_proc_U0_tempA1_address0),
    .tempA1_ce0(Loop_Loop2_proc_U0_tempA1_ce0),
    .tempA1_q0(tempA1_t_q0),
    .data_out1_address0(Loop_Loop2_proc_U0_data_out1_address0),
    .data_out1_ce0(Loop_Loop2_proc_U0_data_out1_ce0),
    .data_out1_we0(Loop_Loop2_proc_U0_data_out1_we0),
    .data_out1_d0(Loop_Loop2_proc_U0_data_out1_d0)
);

lab4_z2_Loop_Loop3_proc Loop_Loop3_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_Loop3_proc_U0_ap_start),
    .ap_done(Loop_Loop3_proc_U0_ap_done),
    .ap_continue(Loop_Loop3_proc_U0_ap_continue),
    .ap_idle(Loop_Loop3_proc_U0_ap_idle),
    .ap_ready(Loop_Loop3_proc_U0_ap_ready),
    .tempA2_address0(Loop_Loop3_proc_U0_tempA2_address0),
    .tempA2_ce0(Loop_Loop3_proc_U0_tempA2_ce0),
    .tempA2_q0(tempA2_t_q0),
    .data_out2_address0(Loop_Loop3_proc_U0_data_out2_address0),
    .data_out2_ce0(Loop_Loop3_proc_U0_data_out2_ce0),
    .data_out2_we0(Loop_Loop3_proc_U0_data_out2_we0),
    .data_out2_d0(Loop_Loop3_proc_U0_data_out2_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tempA1 <= 1'b0;
    end else begin
        if (((Loop_Loop1_proc_U0_ap_done & Loop_Loop1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tempA1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tempA1 <= ap_sync_channel_write_tempA1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tempA2 <= 1'b0;
    end else begin
        if (((Loop_Loop1_proc_U0_ap_done & Loop_Loop1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tempA2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tempA2 <= ap_sync_channel_write_tempA2;
        end
    end
end

assign Loop_Loop1_proc_U0_ap_continue = (ap_sync_channel_write_tempA2 & ap_sync_channel_write_tempA1);

assign Loop_Loop1_proc_U0_ap_start = ap_start;

assign Loop_Loop1_proc_U0_tempA1_full_n = tempA1_i_full_n;

assign Loop_Loop1_proc_U0_tempA2_full_n = tempA2_i_full_n;

assign Loop_Loop2_proc_U0_ap_continue = ap_sync_done;

assign Loop_Loop2_proc_U0_ap_start = tempA1_t_empty_n;

assign Loop_Loop3_proc_U0_ap_continue = ap_sync_done;

assign Loop_Loop3_proc_U0_ap_start = tempA2_t_empty_n;

assign ap_channel_done_tempA1 = ((ap_sync_reg_channel_write_tempA1 ^ 1'b1) & Loop_Loop1_proc_U0_ap_done);

assign ap_channel_done_tempA2 = ((ap_sync_reg_channel_write_tempA2 ^ 1'b1) & Loop_Loop1_proc_U0_ap_done);

assign ap_done = ap_sync_done;

assign ap_idle = ((tempA2_t_empty_n ^ 1'b1) & (tempA1_t_empty_n ^ 1'b1) & Loop_Loop3_proc_U0_ap_idle & Loop_Loop2_proc_U0_ap_idle & Loop_Loop1_proc_U0_ap_idle);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_ready = Loop_Loop1_proc_U0_ap_ready;

assign ap_sync_channel_write_tempA1 = ((ap_channel_done_tempA1 & Loop_Loop1_proc_U0_tempA1_full_n) | ap_sync_reg_channel_write_tempA1);

assign ap_sync_channel_write_tempA2 = ((ap_channel_done_tempA2 & Loop_Loop1_proc_U0_tempA2_full_n) | ap_sync_reg_channel_write_tempA2);

assign ap_sync_done = (Loop_Loop3_proc_U0_ap_done & Loop_Loop2_proc_U0_ap_done);

assign data_in_address0 = Loop_Loop1_proc_U0_data_in_address0;

assign data_in_address1 = 4'd0;

assign data_in_ce0 = Loop_Loop1_proc_U0_data_in_ce0;

assign data_in_ce1 = 1'b0;

assign data_in_d0 = 32'd0;

assign data_in_d1 = 32'd0;

assign data_in_we0 = 1'b0;

assign data_in_we1 = 1'b0;

assign data_out1_address0 = Loop_Loop2_proc_U0_data_out1_address0;

assign data_out1_address1 = 4'd0;

assign data_out1_ce0 = Loop_Loop2_proc_U0_data_out1_ce0;

assign data_out1_ce1 = 1'b0;

assign data_out1_d0 = Loop_Loop2_proc_U0_data_out1_d0;

assign data_out1_d1 = 32'd0;

assign data_out1_we0 = Loop_Loop2_proc_U0_data_out1_we0;

assign data_out1_we1 = 1'b0;

assign data_out2_address0 = Loop_Loop3_proc_U0_data_out2_address0;

assign data_out2_address1 = 4'd0;

assign data_out2_ce0 = Loop_Loop3_proc_U0_data_out2_ce0;

assign data_out2_ce1 = 1'b0;

assign data_out2_d0 = Loop_Loop3_proc_U0_data_out2_d0;

assign data_out2_d1 = 32'd0;

assign data_out2_we0 = Loop_Loop3_proc_U0_data_out2_we0;

assign data_out2_we1 = 1'b0;

endmodule //lab4_z2
