// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kp_502_7_kp_502_7,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbv484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.776083,HLS_SYN_LAT=317,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1932,HLS_SYN_LUT=6873,HLS_VERSION=2021_2}" *)

module kp_502_7 (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_0_address0,
        A_0_ce0,
        A_0_q0,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        B_0_address0,
        B_0_ce0,
        B_0_q0,
        B_1_address0,
        B_1_ce0,
        B_1_q0,
        C_0_address0,
        C_0_ce0,
        C_0_q0,
        C_1_address0,
        C_1_ce0,
        C_1_q0,
        X1_0_address0,
        X1_0_ce0,
        X1_0_we0,
        X1_0_d0,
        X1_1_address0,
        X1_1_ce0,
        X1_1_we0,
        X1_1_d0,
        X2_0_address0,
        X2_0_ce0,
        X2_0_we0,
        X2_0_d0,
        X2_1_address0,
        X2_1_ce0,
        X2_1_we0,
        X2_1_d0,
        D_0_address0,
        D_0_ce0,
        D_0_we0,
        D_0_d0,
        D_1_address0,
        D_1_ce0,
        D_1_we0,
        D_1_d0
);

parameter    ap_ST_fsm_state1 = 150'd1;
parameter    ap_ST_fsm_state2 = 150'd2;
parameter    ap_ST_fsm_state3 = 150'd4;
parameter    ap_ST_fsm_state4 = 150'd8;
parameter    ap_ST_fsm_state5 = 150'd16;
parameter    ap_ST_fsm_state6 = 150'd32;
parameter    ap_ST_fsm_state7 = 150'd64;
parameter    ap_ST_fsm_state8 = 150'd128;
parameter    ap_ST_fsm_state9 = 150'd256;
parameter    ap_ST_fsm_state10 = 150'd512;
parameter    ap_ST_fsm_state11 = 150'd1024;
parameter    ap_ST_fsm_state12 = 150'd2048;
parameter    ap_ST_fsm_state13 = 150'd4096;
parameter    ap_ST_fsm_state14 = 150'd8192;
parameter    ap_ST_fsm_state15 = 150'd16384;
parameter    ap_ST_fsm_state16 = 150'd32768;
parameter    ap_ST_fsm_state17 = 150'd65536;
parameter    ap_ST_fsm_state18 = 150'd131072;
parameter    ap_ST_fsm_state19 = 150'd262144;
parameter    ap_ST_fsm_state20 = 150'd524288;
parameter    ap_ST_fsm_state21 = 150'd1048576;
parameter    ap_ST_fsm_state22 = 150'd2097152;
parameter    ap_ST_fsm_state23 = 150'd4194304;
parameter    ap_ST_fsm_state24 = 150'd8388608;
parameter    ap_ST_fsm_state25 = 150'd16777216;
parameter    ap_ST_fsm_state26 = 150'd33554432;
parameter    ap_ST_fsm_state27 = 150'd67108864;
parameter    ap_ST_fsm_state28 = 150'd134217728;
parameter    ap_ST_fsm_state29 = 150'd268435456;
parameter    ap_ST_fsm_state30 = 150'd536870912;
parameter    ap_ST_fsm_state31 = 150'd1073741824;
parameter    ap_ST_fsm_state32 = 150'd2147483648;
parameter    ap_ST_fsm_state33 = 150'd4294967296;
parameter    ap_ST_fsm_state34 = 150'd8589934592;
parameter    ap_ST_fsm_state35 = 150'd17179869184;
parameter    ap_ST_fsm_state36 = 150'd34359738368;
parameter    ap_ST_fsm_state37 = 150'd68719476736;
parameter    ap_ST_fsm_state38 = 150'd137438953472;
parameter    ap_ST_fsm_state39 = 150'd274877906944;
parameter    ap_ST_fsm_state40 = 150'd549755813888;
parameter    ap_ST_fsm_state41 = 150'd1099511627776;
parameter    ap_ST_fsm_state42 = 150'd2199023255552;
parameter    ap_ST_fsm_state43 = 150'd4398046511104;
parameter    ap_ST_fsm_state44 = 150'd8796093022208;
parameter    ap_ST_fsm_state45 = 150'd17592186044416;
parameter    ap_ST_fsm_state46 = 150'd35184372088832;
parameter    ap_ST_fsm_state47 = 150'd70368744177664;
parameter    ap_ST_fsm_state48 = 150'd140737488355328;
parameter    ap_ST_fsm_state49 = 150'd281474976710656;
parameter    ap_ST_fsm_state50 = 150'd562949953421312;
parameter    ap_ST_fsm_state51 = 150'd1125899906842624;
parameter    ap_ST_fsm_state52 = 150'd2251799813685248;
parameter    ap_ST_fsm_state53 = 150'd4503599627370496;
parameter    ap_ST_fsm_state54 = 150'd9007199254740992;
parameter    ap_ST_fsm_state55 = 150'd18014398509481984;
parameter    ap_ST_fsm_state56 = 150'd36028797018963968;
parameter    ap_ST_fsm_state57 = 150'd72057594037927936;
parameter    ap_ST_fsm_state58 = 150'd144115188075855872;
parameter    ap_ST_fsm_state59 = 150'd288230376151711744;
parameter    ap_ST_fsm_state60 = 150'd576460752303423488;
parameter    ap_ST_fsm_state61 = 150'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 150'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 150'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 150'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 150'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 150'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 150'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 150'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 150'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 150'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 150'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 150'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 150'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 150'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 150'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 150'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 150'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 150'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 150'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 150'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 150'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 150'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 150'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 150'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 150'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 150'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 150'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 150'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 150'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 150'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 150'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 150'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 150'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 150'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 150'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 150'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 150'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 150'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 150'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 150'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 150'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 150'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 150'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 150'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 150'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 150'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 150'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 150'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 150'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 150'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 150'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 150'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 150'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 150'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 150'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 150'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 150'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 150'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 150'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 150'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 150'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 150'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 150'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 150'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 150'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 150'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 150'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 150'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 150'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 150'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 150'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 150'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 150'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 150'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 150'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 150'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 150'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 150'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 150'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 150'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 150'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 150'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 150'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 150'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 150'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 150'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 150'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 150'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 150'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 150'd713623846352979940529142984724747568191373312;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] A_0_address0;
output   A_0_ce0;
input  [31:0] A_0_q0;
output  [1:0] A_1_address0;
output   A_1_ce0;
input  [31:0] A_1_q0;
output  [1:0] B_0_address0;
output   B_0_ce0;
input  [31:0] B_0_q0;
output  [1:0] B_1_address0;
output   B_1_ce0;
input  [31:0] B_1_q0;
output  [1:0] C_0_address0;
output   C_0_ce0;
input  [31:0] C_0_q0;
output  [1:0] C_1_address0;
output   C_1_ce0;
input  [31:0] C_1_q0;
output  [1:0] X1_0_address0;
output   X1_0_ce0;
output   X1_0_we0;
output  [31:0] X1_0_d0;
output  [1:0] X1_1_address0;
output   X1_1_ce0;
output   X1_1_we0;
output  [31:0] X1_1_d0;
output  [1:0] X2_0_address0;
output   X2_0_ce0;
output   X2_0_we0;
output  [31:0] X2_0_d0;
output  [1:0] X2_1_address0;
output   X2_1_ce0;
output   X2_1_we0;
output  [31:0] X2_1_d0;
output  [1:0] D_0_address0;
output   D_0_ce0;
output   D_0_we0;
output  [31:0] D_0_d0;
output  [1:0] D_1_address0;
output   D_1_ce0;
output   D_1_we0;
output  [31:0] D_1_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_0_ce0;
reg A_1_ce0;
reg B_0_ce0;
reg B_1_ce0;
reg C_0_ce0;
reg C_1_ce0;
reg X1_0_ce0;
reg X1_0_we0;
reg X1_1_ce0;
reg X1_1_we0;
reg X2_0_ce0;
reg X2_0_we0;
reg X2_1_ce0;
reg X2_1_we0;
reg D_0_ce0;
reg D_0_we0;
reg D_1_ce0;
reg D_1_we0;

(* fsm_encoding = "none" *) reg   [149:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_286_p1;
reg   [63:0] reg_294;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state118;
wire   [63:0] grp_fu_289_p2;
reg   [63:0] reg_303;
wire   [63:0] grp_fu_270_p2;
reg   [63:0] reg_309;
wire   [63:0] grp_fu_274_p2;
reg   [63:0] reg_314;
wire   [63:0] zext_ln7_fu_345_p1;
reg   [63:0] zext_ln7_reg_989;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_327_p3;
reg  signed [31:0] temp_B_reg_1017;
wire    ap_CS_fsm_state3;
reg  signed [31:0] temp_A_reg_1022;
wire   [31:0] mul_ln11_fu_352_p2;
reg   [31:0] mul_ln11_reg_1027;
wire   [31:0] mul_ln11_1_fu_358_p2;
reg   [31:0] mul_ln11_1_reg_1032;
wire   [31:0] temp_D_fu_369_p2;
reg   [31:0] temp_D_reg_1037;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_2_fu_375_p3;
reg   [0:0] tmp_2_reg_1042;
wire   [31:0] shl_ln19_fu_383_p2;
wire    ap_CS_fsm_state40;
reg   [0:0] p_Result_s_reg_1051;
wire    ap_CS_fsm_state75;
wire   [51:0] tmp_29_fu_411_p1;
reg   [51:0] tmp_29_reg_1056;
wire   [11:0] add_ln513_fu_419_p2;
reg   [11:0] add_ln513_reg_1061;
reg   [0:0] isNeg_reg_1066;
wire   [10:0] sub_ln1364_fu_433_p2;
reg   [10:0] sub_ln1364_reg_1072;
reg   [0:0] p_Result_1_reg_1077;
wire   [51:0] tmp_31_fu_461_p1;
reg   [51:0] tmp_31_reg_1082;
wire   [11:0] add_ln513_1_fu_469_p2;
reg   [11:0] add_ln513_1_reg_1087;
reg   [0:0] isNeg_1_reg_1092;
wire   [10:0] sub_ln1364_1_fu_483_p2;
reg   [10:0] sub_ln1364_1_reg_1098;
wire    ap_CS_fsm_state76;
reg  signed [31:0] temp_B_1_reg_1118;
wire    ap_CS_fsm_state77;
reg  signed [31:0] temp_A_1_reg_1123;
wire   [31:0] mul_ln11_2_fu_659_p2;
reg   [31:0] mul_ln11_2_reg_1128;
wire   [31:0] mul_ln11_3_fu_665_p2;
reg   [31:0] mul_ln11_3_reg_1133;
wire   [31:0] temp_D_1_fu_676_p2;
reg   [31:0] temp_D_1_reg_1138;
wire    ap_CS_fsm_state78;
wire   [0:0] tmp_15_fu_682_p3;
reg   [0:0] tmp_15_reg_1143;
wire   [31:0] shl_ln19_1_fu_690_p2;
wire    ap_CS_fsm_state114;
reg   [0:0] p_Result_2_reg_1152;
wire    ap_CS_fsm_state149;
wire   [51:0] tmp_33_fu_718_p1;
reg   [51:0] tmp_33_reg_1157;
wire   [11:0] add_ln513_2_fu_726_p2;
reg   [11:0] add_ln513_2_reg_1162;
reg   [0:0] isNeg_2_reg_1167;
wire   [10:0] sub_ln1364_2_fu_740_p2;
reg   [10:0] sub_ln1364_2_reg_1173;
reg   [0:0] p_Result_3_reg_1178;
wire   [51:0] tmp_35_fu_768_p1;
reg   [51:0] tmp_35_reg_1183;
wire   [11:0] add_ln513_3_fu_776_p2;
reg   [11:0] add_ln513_3_reg_1188;
reg   [0:0] isNeg_3_reg_1193;
wire   [10:0] sub_ln1364_3_fu_790_p2;
reg   [10:0] sub_ln1364_3_reg_1199;
wire    ap_CS_fsm_state150;
reg   [3:0] i_fu_110;
wire   [3:0] add_ln6_fu_966_p2;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state119;
reg   [31:0] grp_fu_286_p0;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state84;
wire   [1:0] lshr_ln7_fu_335_p4;
wire   [31:0] shl_ln11_fu_364_p2;
wire   [63:0] grp_fu_278_p2;
wire   [63:0] data_V_fu_389_p1;
wire   [10:0] tmp_28_fu_401_p4;
wire   [11:0] zext_ln513_fu_415_p1;
wire   [63:0] grp_fu_282_p2;
wire   [63:0] data_V_1_fu_439_p1;
wire   [10:0] tmp_30_fu_451_p4;
wire   [11:0] zext_ln513_1_fu_465_p1;
wire   [53:0] mantissa_fu_489_p4;
wire  signed [11:0] sext_ln1364_fu_502_p1;
wire   [11:0] ush_fu_505_p3;
wire  signed [31:0] sext_ln1340_fu_511_p1;
wire   [136:0] zext_ln15_fu_498_p1;
wire   [136:0] zext_ln1340_fu_515_p1;
wire   [136:0] r_V_fu_519_p2;
wire   [0:0] tmp_9_fu_531_p3;
wire   [136:0] r_V_1_fu_525_p2;
wire   [31:0] zext_ln671_fu_539_p1;
wire   [31:0] tmp_s_fu_543_p4;
wire   [31:0] val_fu_553_p3;
wire   [31:0] result_V_2_fu_560_p2;
wire   [53:0] mantissa_1_fu_574_p4;
wire  signed [11:0] sext_ln1364_1_fu_587_p1;
wire   [11:0] ush_1_fu_590_p3;
wire  signed [31:0] sext_ln1340_1_fu_596_p1;
wire   [136:0] zext_ln15_1_fu_583_p1;
wire   [136:0] zext_ln1340_1_fu_600_p1;
wire   [136:0] r_V_2_fu_604_p2;
wire   [0:0] tmp_14_fu_616_p3;
wire   [136:0] r_V_3_fu_610_p2;
wire   [31:0] zext_ln671_1_fu_624_p1;
wire   [31:0] tmp_4_fu_628_p4;
wire   [31:0] val_1_fu_638_p3;
wire   [31:0] result_V_5_fu_645_p2;
wire   [31:0] shl_ln11_1_fu_671_p2;
wire   [63:0] data_V_2_fu_696_p1;
wire   [10:0] tmp_32_fu_708_p4;
wire   [11:0] zext_ln513_2_fu_722_p1;
wire   [63:0] data_V_3_fu_746_p1;
wire   [10:0] tmp_34_fu_758_p4;
wire   [11:0] zext_ln513_3_fu_772_p1;
wire   [53:0] mantissa_2_fu_796_p4;
wire  signed [11:0] sext_ln1364_2_fu_809_p1;
wire   [11:0] ush_2_fu_812_p3;
wire  signed [31:0] sext_ln1340_2_fu_818_p1;
wire   [136:0] zext_ln15_2_fu_805_p1;
wire   [136:0] zext_ln1340_2_fu_822_p1;
wire   [136:0] r_V_4_fu_826_p2;
wire   [0:0] tmp_21_fu_838_p3;
wire   [136:0] r_V_5_fu_832_p2;
wire   [31:0] zext_ln671_2_fu_846_p1;
wire   [31:0] tmp_6_fu_850_p4;
wire   [31:0] val_2_fu_860_p3;
wire   [31:0] result_V_9_fu_867_p2;
wire   [53:0] mantissa_3_fu_881_p4;
wire  signed [11:0] sext_ln1364_3_fu_894_p1;
wire   [11:0] ush_3_fu_897_p3;
wire  signed [31:0] sext_ln1340_3_fu_903_p1;
wire   [136:0] zext_ln15_3_fu_890_p1;
wire   [136:0] zext_ln1340_3_fu_907_p1;
wire   [136:0] r_V_6_fu_911_p2;
wire   [0:0] tmp_27_fu_923_p3;
wire   [136:0] r_V_7_fu_917_p2;
wire   [31:0] zext_ln671_3_fu_931_p1;
wire   [31:0] tmp_10_fu_935_p4;
wire   [31:0] val_3_fu_945_p3;
wire   [31:0] result_V_10_fu_952_p2;
reg   [149:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ST_fsm_state150_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 150'd1;
end

kp_502_7_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_294),
    .din1(reg_303),
    .ce(1'b1),
    .dout(grp_fu_270_p2)
);

kp_502_7_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_294),
    .din1(reg_303),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

kp_502_7_ddiv_64ns_64ns_64_31_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_31_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_309),
    .din1(reg_294),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

kp_502_7_ddiv_64ns_64ns_64_31_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_31_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_314),
    .din1(reg_294),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

kp_502_7_sitodp_32ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_5_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .ce(1'b1),
    .dout(grp_fu_286_p1)
);

kp_502_7_dsqrt_64ns_64ns_64_30_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_30_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(reg_294),
    .ce(1'b1),
    .dout(grp_fu_289_p2)
);

kp_502_7_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U7(
    .din0(B_0_q0),
    .din1(B_0_q0),
    .dout(mul_ln11_fu_352_p2)
);

kp_502_7_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U8(
    .din0(A_0_q0),
    .din1(C_0_q0),
    .dout(mul_ln11_1_fu_358_p2)
);

kp_502_7_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U9(
    .din0(B_1_q0),
    .din1(B_1_q0),
    .dout(mul_ln11_2_fu_659_p2)
);

kp_502_7_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U10(
    .din0(A_1_q0),
    .din1(C_1_q0),
    .dout(mul_ln11_3_fu_665_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_110 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        i_fu_110 <= add_ln6_fu_966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        add_ln513_1_reg_1087 <= add_ln513_1_fu_469_p2;
        add_ln513_reg_1061 <= add_ln513_fu_419_p2;
        isNeg_1_reg_1092 <= add_ln513_1_fu_469_p2[32'd11];
        isNeg_reg_1066 <= add_ln513_fu_419_p2[32'd11];
        p_Result_1_reg_1077 <= data_V_1_fu_439_p1[32'd63];
        p_Result_s_reg_1051 <= data_V_fu_389_p1[32'd63];
        sub_ln1364_1_reg_1098 <= sub_ln1364_1_fu_483_p2;
        sub_ln1364_reg_1072 <= sub_ln1364_fu_433_p2;
        tmp_29_reg_1056 <= tmp_29_fu_411_p1;
        tmp_31_reg_1082 <= tmp_31_fu_461_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        add_ln513_2_reg_1162 <= add_ln513_2_fu_726_p2;
        add_ln513_3_reg_1188 <= add_ln513_3_fu_776_p2;
        isNeg_2_reg_1167 <= add_ln513_2_fu_726_p2[32'd11];
        isNeg_3_reg_1193 <= add_ln513_3_fu_776_p2[32'd11];
        p_Result_2_reg_1152 <= data_V_2_fu_696_p1[32'd63];
        p_Result_3_reg_1178 <= data_V_3_fu_746_p1[32'd63];
        sub_ln1364_2_reg_1173 <= sub_ln1364_2_fu_740_p2;
        sub_ln1364_3_reg_1199 <= sub_ln1364_3_fu_790_p2;
        tmp_33_reg_1157 <= tmp_33_fu_718_p1;
        tmp_35_reg_1183 <= tmp_35_fu_768_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln11_1_reg_1032 <= mul_ln11_1_fu_358_p2;
        mul_ln11_reg_1027 <= mul_ln11_fu_352_p2;
        temp_A_reg_1022 <= A_0_q0;
        temp_B_reg_1017 <= B_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        mul_ln11_2_reg_1128 <= mul_ln11_2_fu_659_p2;
        mul_ln11_3_reg_1133 <= mul_ln11_3_fu_665_p2;
        temp_A_1_reg_1123 <= A_1_q0;
        temp_B_1_reg_1118 <= B_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_294 <= grp_fu_286_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_303 <= grp_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_309 <= grp_fu_270_p2;
        reg_314 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        temp_D_1_reg_1138 <= temp_D_1_fu_676_p2;
        tmp_15_reg_1143 <= temp_D_1_fu_676_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        temp_D_reg_1037 <= temp_D_fu_369_p2;
        tmp_2_reg_1042 <= temp_D_fu_369_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_327_p3 == 1'd0))) begin
        zext_ln7_reg_989[1 : 0] <= zext_ln7_fu_345_p1[1 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        B_0_ce0 = 1'b1;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        B_1_ce0 = 1'b1;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        C_0_ce0 = 1'b1;
    end else begin
        C_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        C_1_ce0 = 1'b1;
    end else begin
        C_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_0_ce0 = 1'b1;
    end else begin
        D_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_0_we0 = 1'b1;
    end else begin
        D_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        D_1_ce0 = 1'b1;
    end else begin
        D_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        D_1_we0 = 1'b1;
    end else begin
        D_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        X1_0_ce0 = 1'b1;
    end else begin
        X1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & (tmp_2_reg_1042 == 1'd0))) begin
        X1_0_we0 = 1'b1;
    end else begin
        X1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        X1_1_ce0 = 1'b1;
    end else begin
        X1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state150) & (tmp_15_reg_1143 == 1'd0))) begin
        X1_1_we0 = 1'b1;
    end else begin
        X1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        X2_0_ce0 = 1'b1;
    end else begin
        X2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & (tmp_2_reg_1042 == 1'd0))) begin
        X2_0_we0 = 1'b1;
    end else begin
        X2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        X2_1_ce0 = 1'b1;
    end else begin
        X2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state150) & (tmp_15_reg_1143 == 1'd0))) begin
        X2_1_we0 = 1'b1;
    end else begin
        X2_1_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state150_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_327_p3 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_327_p3 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_286_p0 = shl_ln19_1_fu_690_p2;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_fu_286_p0 = temp_B_1_reg_1118;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_286_p0 = temp_D_1_reg_1138;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_286_p0 = shl_ln19_fu_383_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_286_p0 = temp_B_reg_1017;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_286_p0 = temp_D_reg_1037;
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_327_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_2_fu_375_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (tmp_15_fu_682_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_0_address0 = zext_ln7_fu_345_p1;

assign A_1_address0 = zext_ln7_reg_989;

assign B_0_address0 = zext_ln7_fu_345_p1;

assign B_1_address0 = zext_ln7_reg_989;

assign C_0_address0 = zext_ln7_fu_345_p1;

assign C_1_address0 = zext_ln7_reg_989;

assign D_0_address0 = zext_ln7_reg_989;

assign D_0_d0 = temp_D_fu_369_p2;

assign D_1_address0 = zext_ln7_reg_989;

assign D_1_d0 = temp_D_1_fu_676_p2;

assign X1_0_address0 = zext_ln7_reg_989;

assign X1_0_d0 = ((p_Result_s_reg_1051[0:0] == 1'b1) ? result_V_2_fu_560_p2 : val_fu_553_p3);

assign X1_1_address0 = zext_ln7_reg_989;

assign X1_1_d0 = ((p_Result_2_reg_1152[0:0] == 1'b1) ? result_V_9_fu_867_p2 : val_2_fu_860_p3);

assign X2_0_address0 = zext_ln7_reg_989;

assign X2_0_d0 = ((p_Result_1_reg_1077[0:0] == 1'b1) ? result_V_5_fu_645_p2 : val_1_fu_638_p3);

assign X2_1_address0 = zext_ln7_reg_989;

assign X2_1_d0 = ((p_Result_3_reg_1178[0:0] == 1'b1) ? result_V_10_fu_952_p2 : val_3_fu_945_p3);

assign add_ln513_1_fu_469_p2 = ($signed(zext_ln513_1_fu_465_p1) + $signed(12'd3073));

assign add_ln513_2_fu_726_p2 = ($signed(zext_ln513_2_fu_722_p1) + $signed(12'd3073));

assign add_ln513_3_fu_776_p2 = ($signed(zext_ln513_3_fu_772_p1) + $signed(12'd3073));

assign add_ln513_fu_419_p2 = ($signed(zext_ln513_fu_415_p1) + $signed(12'd3073));

assign add_ln6_fu_966_p2 = (i_fu_110 + 4'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign data_V_1_fu_439_p1 = grp_fu_282_p2;

assign data_V_2_fu_696_p1 = grp_fu_278_p2;

assign data_V_3_fu_746_p1 = grp_fu_282_p2;

assign data_V_fu_389_p1 = grp_fu_278_p2;

assign lshr_ln7_fu_335_p4 = {{i_fu_110[2:1]}};

assign mantissa_1_fu_574_p4 = {{{{1'd1}, {tmp_31_reg_1082}}}, {1'd0}};

assign mantissa_2_fu_796_p4 = {{{{1'd1}, {tmp_33_reg_1157}}}, {1'd0}};

assign mantissa_3_fu_881_p4 = {{{{1'd1}, {tmp_35_reg_1183}}}, {1'd0}};

assign mantissa_fu_489_p4 = {{{{1'd1}, {tmp_29_reg_1056}}}, {1'd0}};

assign r_V_1_fu_525_p2 = zext_ln15_fu_498_p1 << zext_ln1340_fu_515_p1;

assign r_V_2_fu_604_p2 = zext_ln15_1_fu_583_p1 >> zext_ln1340_1_fu_600_p1;

assign r_V_3_fu_610_p2 = zext_ln15_1_fu_583_p1 << zext_ln1340_1_fu_600_p1;

assign r_V_4_fu_826_p2 = zext_ln15_2_fu_805_p1 >> zext_ln1340_2_fu_822_p1;

assign r_V_5_fu_832_p2 = zext_ln15_2_fu_805_p1 << zext_ln1340_2_fu_822_p1;

assign r_V_6_fu_911_p2 = zext_ln15_3_fu_890_p1 >> zext_ln1340_3_fu_907_p1;

assign r_V_7_fu_917_p2 = zext_ln15_3_fu_890_p1 << zext_ln1340_3_fu_907_p1;

assign r_V_fu_519_p2 = zext_ln15_fu_498_p1 >> zext_ln1340_fu_515_p1;

assign result_V_10_fu_952_p2 = (32'd0 - val_3_fu_945_p3);

assign result_V_2_fu_560_p2 = (32'd0 - val_fu_553_p3);

assign result_V_5_fu_645_p2 = (32'd0 - val_1_fu_638_p3);

assign result_V_9_fu_867_p2 = (32'd0 - val_2_fu_860_p3);

assign sext_ln1340_1_fu_596_p1 = $signed(ush_1_fu_590_p3);

assign sext_ln1340_2_fu_818_p1 = $signed(ush_2_fu_812_p3);

assign sext_ln1340_3_fu_903_p1 = $signed(ush_3_fu_897_p3);

assign sext_ln1340_fu_511_p1 = $signed(ush_fu_505_p3);

assign sext_ln1364_1_fu_587_p1 = $signed(sub_ln1364_1_reg_1098);

assign sext_ln1364_2_fu_809_p1 = $signed(sub_ln1364_2_reg_1173);

assign sext_ln1364_3_fu_894_p1 = $signed(sub_ln1364_3_reg_1199);

assign sext_ln1364_fu_502_p1 = $signed(sub_ln1364_reg_1072);

assign shl_ln11_1_fu_671_p2 = mul_ln11_3_reg_1133 << 32'd2;

assign shl_ln11_fu_364_p2 = mul_ln11_1_reg_1032 << 32'd2;

assign shl_ln19_1_fu_690_p2 = temp_A_1_reg_1123 << 32'd1;

assign shl_ln19_fu_383_p2 = temp_A_reg_1022 << 32'd1;

assign sub_ln1364_1_fu_483_p2 = (11'd1023 - tmp_30_fu_451_p4);

assign sub_ln1364_2_fu_740_p2 = (11'd1023 - tmp_32_fu_708_p4);

assign sub_ln1364_3_fu_790_p2 = (11'd1023 - tmp_34_fu_758_p4);

assign sub_ln1364_fu_433_p2 = (11'd1023 - tmp_28_fu_401_p4);

assign temp_D_1_fu_676_p2 = (mul_ln11_2_reg_1128 - shl_ln11_1_fu_671_p2);

assign temp_D_fu_369_p2 = (mul_ln11_reg_1027 - shl_ln11_fu_364_p2);

assign tmp_10_fu_935_p4 = {{r_V_7_fu_917_p2[84:53]}};

assign tmp_14_fu_616_p3 = r_V_2_fu_604_p2[32'd53];

assign tmp_15_fu_682_p3 = temp_D_1_fu_676_p2[32'd31];

assign tmp_21_fu_838_p3 = r_V_4_fu_826_p2[32'd53];

assign tmp_27_fu_923_p3 = r_V_6_fu_911_p2[32'd53];

assign tmp_28_fu_401_p4 = {{data_V_fu_389_p1[62:52]}};

assign tmp_29_fu_411_p1 = data_V_fu_389_p1[51:0];

assign tmp_2_fu_375_p3 = temp_D_fu_369_p2[32'd31];

assign tmp_30_fu_451_p4 = {{data_V_1_fu_439_p1[62:52]}};

assign tmp_31_fu_461_p1 = data_V_1_fu_439_p1[51:0];

assign tmp_32_fu_708_p4 = {{data_V_2_fu_696_p1[62:52]}};

assign tmp_33_fu_718_p1 = data_V_2_fu_696_p1[51:0];

assign tmp_34_fu_758_p4 = {{data_V_3_fu_746_p1[62:52]}};

assign tmp_35_fu_768_p1 = data_V_3_fu_746_p1[51:0];

assign tmp_4_fu_628_p4 = {{r_V_3_fu_610_p2[84:53]}};

assign tmp_6_fu_850_p4 = {{r_V_5_fu_832_p2[84:53]}};

assign tmp_9_fu_531_p3 = r_V_fu_519_p2[32'd53];

assign tmp_fu_327_p3 = i_fu_110[32'd3];

assign tmp_s_fu_543_p4 = {{r_V_1_fu_525_p2[84:53]}};

assign ush_1_fu_590_p3 = ((isNeg_1_reg_1092[0:0] == 1'b1) ? sext_ln1364_1_fu_587_p1 : add_ln513_1_reg_1087);

assign ush_2_fu_812_p3 = ((isNeg_2_reg_1167[0:0] == 1'b1) ? sext_ln1364_2_fu_809_p1 : add_ln513_2_reg_1162);

assign ush_3_fu_897_p3 = ((isNeg_3_reg_1193[0:0] == 1'b1) ? sext_ln1364_3_fu_894_p1 : add_ln513_3_reg_1188);

assign ush_fu_505_p3 = ((isNeg_reg_1066[0:0] == 1'b1) ? sext_ln1364_fu_502_p1 : add_ln513_reg_1061);

assign val_1_fu_638_p3 = ((isNeg_1_reg_1092[0:0] == 1'b1) ? zext_ln671_1_fu_624_p1 : tmp_4_fu_628_p4);

assign val_2_fu_860_p3 = ((isNeg_2_reg_1167[0:0] == 1'b1) ? zext_ln671_2_fu_846_p1 : tmp_6_fu_850_p4);

assign val_3_fu_945_p3 = ((isNeg_3_reg_1193[0:0] == 1'b1) ? zext_ln671_3_fu_931_p1 : tmp_10_fu_935_p4);

assign val_fu_553_p3 = ((isNeg_reg_1066[0:0] == 1'b1) ? zext_ln671_fu_539_p1 : tmp_s_fu_543_p4);

assign zext_ln1340_1_fu_600_p1 = $unsigned(sext_ln1340_1_fu_596_p1);

assign zext_ln1340_2_fu_822_p1 = $unsigned(sext_ln1340_2_fu_818_p1);

assign zext_ln1340_3_fu_907_p1 = $unsigned(sext_ln1340_3_fu_903_p1);

assign zext_ln1340_fu_515_p1 = $unsigned(sext_ln1340_fu_511_p1);

assign zext_ln15_1_fu_583_p1 = mantissa_1_fu_574_p4;

assign zext_ln15_2_fu_805_p1 = mantissa_2_fu_796_p4;

assign zext_ln15_3_fu_890_p1 = mantissa_3_fu_881_p4;

assign zext_ln15_fu_498_p1 = mantissa_fu_489_p4;

assign zext_ln513_1_fu_465_p1 = tmp_30_fu_451_p4;

assign zext_ln513_2_fu_722_p1 = tmp_32_fu_708_p4;

assign zext_ln513_3_fu_772_p1 = tmp_34_fu_758_p4;

assign zext_ln513_fu_415_p1 = tmp_28_fu_401_p4;

assign zext_ln671_1_fu_624_p1 = tmp_14_fu_616_p3;

assign zext_ln671_2_fu_846_p1 = tmp_21_fu_838_p3;

assign zext_ln671_3_fu_931_p1 = tmp_27_fu_923_p3;

assign zext_ln671_fu_539_p1 = tmp_9_fu_531_p3;

assign zext_ln7_fu_345_p1 = lshr_ln7_fu_335_p4;

always @ (posedge ap_clk) begin
    zext_ln7_reg_989[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //kp_502_7
