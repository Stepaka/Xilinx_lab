// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lab4_z1_lab4_z1,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12t-csg325-1Q,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.470000,HLS_SYN_LAT=125,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2238,HLS_SYN_LUT=869,HLS_VERSION=2021_2}" *)

module lab4_z1 (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_a_address0,
        in_a_ce0,
        in_a_q0,
        in_b_address0,
        in_b_ce0,
        in_b_q0,
        in_b_address1,
        in_b_ce1,
        in_b_q1,
        res_address0,
        res_ce0,
        res_we0,
        res_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_pp0_stage1 = 9'd4;
parameter    ap_ST_fsm_pp0_stage2 = 9'd8;
parameter    ap_ST_fsm_pp0_stage3 = 9'd16;
parameter    ap_ST_fsm_pp0_stage4 = 9'd32;
parameter    ap_ST_fsm_pp0_stage5 = 9'd64;
parameter    ap_ST_fsm_pp0_stage6 = 9'd128;
parameter    ap_ST_fsm_pp0_stage7 = 9'd256;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] in_a_address0;
output   in_a_ce0;
input  [31:0] in_a_q0;
output  [3:0] in_b_address0;
output   in_b_ce0;
input  [31:0] in_b_q0;
output  [3:0] in_b_address1;
output   in_b_ce1;
input  [31:0] in_b_q1;
output  [3:0] res_address0;
output   res_ce0;
output   res_we0;
output  [31:0] res_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_a_ce0;
reg[3:0] in_b_address0;
reg in_b_ce0;
reg[3:0] in_b_address1;
reg in_b_ce1;
reg res_ce0;
reg res_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] icmp_ln6_reg_803;
wire    ap_CS_fsm_pp0_stage7;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] do_init_reg_246;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] j1_reg_262;
reg   [31:0] in_b_load_14_rewind_reg_277;
reg   [31:0] in_b_load_13_rewind_reg_292;
reg   [31:0] in_b_load_12_rewind_reg_307;
reg   [31:0] in_b_load_11_rewind_reg_322;
reg   [31:0] in_b_load_10_rewind_reg_337;
reg   [31:0] in_b_load_9_rewind_reg_352;
reg   [31:0] in_b_load_8_rewind_reg_367;
reg   [31:0] in_b_load_7_rewind_reg_382;
reg   [31:0] in_b_load_6_rewind_reg_397;
reg   [31:0] in_b_load_5_rewind_reg_412;
reg   [31:0] in_b_load_4_rewind_reg_427;
reg   [31:0] in_b_load_3_rewind_reg_442;
reg   [31:0] in_b_load_2_rewind_reg_457;
reg   [31:0] in_b_load_1_rewind_reg_472;
reg   [31:0] in_b_load_rewind_reg_487;
reg   [31:0] in_b_load_14_phi_reg_502;
reg   [31:0] in_b_load_13_phi_reg_514;
reg   [31:0] in_b_load_12_phi_reg_526;
reg   [31:0] in_b_load_11_phi_reg_538;
reg   [31:0] in_b_load_10_phi_reg_550;
reg   [31:0] in_b_load_9_phi_reg_562;
reg   [31:0] in_b_load_8_phi_reg_574;
reg   [31:0] in_b_load_7_phi_reg_586;
reg   [31:0] in_b_load_6_phi_reg_598;
reg   [31:0] in_b_load_5_phi_reg_610;
reg   [31:0] in_b_load_4_phi_reg_622;
reg   [31:0] in_b_load_3_phi_reg_634;
reg   [31:0] in_b_load_2_phi_reg_646;
reg   [31:0] in_b_load_1_phi_reg_658;
reg   [31:0] in_b_load_phi_reg_670;
wire   [63:0] zext_ln6_fu_682_p1;
reg   [63:0] zext_ln6_reg_793;
reg   [63:0] zext_ln6_reg_793_pp0_iter1_reg;
wire   [0:0] icmp_ln6_fu_687_p2;
reg   [0:0] icmp_ln6_reg_803_pp0_iter1_reg;
reg   [31:0] in_b_load_reg_807;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] in_b_load_1_reg_812;
reg  signed [31:0] temp_a_reg_827;
reg  signed [31:0] temp_a_reg_827_pp0_iter1_reg;
reg   [31:0] in_b_load_2_reg_832;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] in_b_load_3_reg_837;
reg   [31:0] in_b_load_4_reg_852;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] in_b_load_5_reg_857;
reg   [31:0] in_b_load_6_reg_872;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] in_b_load_7_reg_877;
reg   [31:0] in_b_load_8_reg_892;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] in_b_load_9_reg_897;
reg   [31:0] in_b_load_10_reg_912;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] in_b_load_11_reg_917;
reg   [31:0] in_b_load_12_reg_932;
reg   [31:0] in_b_load_13_reg_937;
wire   [3:0] j_fu_693_p2;
reg   [3:0] j_reg_947;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] add_ln10_1_fu_705_p2;
reg   [31:0] add_ln10_1_reg_957;
wire   [31:0] add_ln10_4_fu_723_p2;
reg   [31:0] add_ln10_4_reg_962;
wire   [31:0] add_ln10_6_fu_729_p2;
reg   [31:0] add_ln10_6_reg_967;
wire   [31:0] add_ln10_7_fu_735_p2;
reg   [31:0] add_ln10_7_reg_972;
wire   [31:0] add_ln10_11_fu_753_p2;
reg   [31:0] add_ln10_11_reg_977;
wire   [31:0] add_ln10_12_fu_763_p2;
reg   [31:0] add_ln10_12_reg_982;
wire  signed [31:0] add_ln10_13_fu_772_p2;
reg  signed [31:0] add_ln10_13_reg_987;
wire   [31:0] product_fu_777_p2;
reg   [31:0] product_reg_992;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_j1_phi_fu_266_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_14_phi_reg_502;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_14_phi_reg_502;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_13_phi_reg_514;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_13_phi_reg_514;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_12_phi_reg_526;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_12_phi_reg_526;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_11_phi_reg_538;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_11_phi_reg_538;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_10_phi_reg_550;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_10_phi_reg_550;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_9_phi_reg_562;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_9_phi_reg_562;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_8_phi_reg_574;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_8_phi_reg_574;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_7_phi_reg_586;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_7_phi_reg_586;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_6_phi_reg_598;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_6_phi_reg_598;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_5_phi_reg_610;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_5_phi_reg_610;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_4_phi_reg_622;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_4_phi_reg_622;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_3_phi_reg_634;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_3_phi_reg_634;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_2_phi_reg_646;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_2_phi_reg_646;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_1_phi_reg_658;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_1_phi_reg_658;
wire   [31:0] ap_phi_reg_pp0_iter0_in_b_load_phi_reg_670;
reg   [31:0] ap_phi_reg_pp0_iter1_in_b_load_phi_reg_670;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire   [31:0] add_ln10_fu_699_p2;
wire   [31:0] add_ln10_3_fu_717_p2;
wire   [31:0] add_ln10_2_fu_711_p2;
wire   [31:0] add_ln10_10_fu_747_p2;
wire   [31:0] add_ln10_9_fu_741_p2;
wire   [31:0] add_ln10_8_fu_759_p2;
wire   [31:0] add_ln10_5_fu_768_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_343;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

lab4_z1_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U1(
    .din0(temp_a_reg_827_pp0_iter1_reg),
    .din1(add_ln10_13_reg_987),
    .dout(product_fu_777_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_10_phi_reg_550 <= in_b_load_10_rewind_reg_337;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_10_phi_reg_550 <= in_b_load_10_reg_912;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_10_phi_reg_550 <= ap_phi_reg_pp0_iter0_in_b_load_10_phi_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_11_phi_reg_538 <= in_b_load_11_rewind_reg_322;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_11_phi_reg_538 <= in_b_load_11_reg_917;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_11_phi_reg_538 <= ap_phi_reg_pp0_iter0_in_b_load_11_phi_reg_538;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_12_phi_reg_526 <= in_b_load_12_rewind_reg_307;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_12_phi_reg_526 <= in_b_load_12_reg_932;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_12_phi_reg_526 <= ap_phi_reg_pp0_iter0_in_b_load_12_phi_reg_526;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_13_phi_reg_514 <= in_b_load_13_rewind_reg_292;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_13_phi_reg_514 <= in_b_load_13_reg_937;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_13_phi_reg_514 <= ap_phi_reg_pp0_iter0_in_b_load_13_phi_reg_514;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_14_phi_reg_502 <= in_b_load_14_rewind_reg_277;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_14_phi_reg_502 <= in_b_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_14_phi_reg_502 <= ap_phi_reg_pp0_iter0_in_b_load_14_phi_reg_502;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_1_phi_reg_658 <= in_b_load_1_rewind_reg_472;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_1_phi_reg_658 <= in_b_load_1_reg_812;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_1_phi_reg_658 <= ap_phi_reg_pp0_iter0_in_b_load_1_phi_reg_658;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_2_phi_reg_646 <= in_b_load_2_rewind_reg_457;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_2_phi_reg_646 <= in_b_load_2_reg_832;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_2_phi_reg_646 <= ap_phi_reg_pp0_iter0_in_b_load_2_phi_reg_646;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_3_phi_reg_634 <= in_b_load_3_rewind_reg_442;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_3_phi_reg_634 <= in_b_load_3_reg_837;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_3_phi_reg_634 <= ap_phi_reg_pp0_iter0_in_b_load_3_phi_reg_634;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_4_phi_reg_622 <= in_b_load_4_rewind_reg_427;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_4_phi_reg_622 <= in_b_load_4_reg_852;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_4_phi_reg_622 <= ap_phi_reg_pp0_iter0_in_b_load_4_phi_reg_622;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_5_phi_reg_610 <= in_b_load_5_rewind_reg_412;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_5_phi_reg_610 <= in_b_load_5_reg_857;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_5_phi_reg_610 <= ap_phi_reg_pp0_iter0_in_b_load_5_phi_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_6_phi_reg_598 <= in_b_load_6_rewind_reg_397;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_6_phi_reg_598 <= in_b_load_6_reg_872;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_6_phi_reg_598 <= ap_phi_reg_pp0_iter0_in_b_load_6_phi_reg_598;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_7_phi_reg_586 <= in_b_load_7_rewind_reg_382;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_7_phi_reg_586 <= in_b_load_7_reg_877;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_7_phi_reg_586 <= ap_phi_reg_pp0_iter0_in_b_load_7_phi_reg_586;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_8_phi_reg_574 <= in_b_load_8_rewind_reg_367;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_8_phi_reg_574 <= in_b_load_8_reg_892;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_8_phi_reg_574 <= ap_phi_reg_pp0_iter0_in_b_load_8_phi_reg_574;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_9_phi_reg_562 <= in_b_load_9_rewind_reg_352;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_9_phi_reg_562 <= in_b_load_9_reg_897;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_9_phi_reg_562 <= ap_phi_reg_pp0_iter0_in_b_load_9_phi_reg_562;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_phi_reg_670 <= in_b_load_rewind_reg_487;
    end else if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_phi_reg_670 <= in_b_load_reg_807;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_in_b_load_phi_reg_670 <= ap_phi_reg_pp0_iter0_in_b_load_phi_reg_670;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_803 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        do_init_reg_246 <= 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_803 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        do_init_reg_246 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_803 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j1_reg_262 <= j_reg_947;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_803 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        j1_reg_262 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln10_11_reg_977 <= add_ln10_11_fu_753_p2;
        add_ln10_1_reg_957 <= add_ln10_1_fu_705_p2;
        add_ln10_4_reg_962 <= add_ln10_4_fu_723_p2;
        add_ln10_6_reg_967 <= add_ln10_6_fu_729_p2;
        add_ln10_7_reg_972 <= add_ln10_7_fu_735_p2;
        temp_a_reg_827 <= in_a_q0;
        temp_a_reg_827_pp0_iter1_reg <= temp_a_reg_827;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln10_12_reg_982 <= add_ln10_12_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln10_13_reg_987 <= add_ln10_13_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln6_reg_803 <= icmp_ln6_fu_687_p2;
        icmp_ln6_reg_803_pp0_iter1_reg <= icmp_ln6_reg_803;
        zext_ln6_reg_793[3 : 0] <= zext_ln6_fu_682_p1[3 : 0];
        zext_ln6_reg_793_pp0_iter1_reg[3 : 0] <= zext_ln6_reg_793[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        in_b_load_10_phi_reg_550 <= ap_phi_reg_pp0_iter1_in_b_load_10_phi_reg_550;
        in_b_load_11_phi_reg_538 <= ap_phi_reg_pp0_iter1_in_b_load_11_phi_reg_538;
        in_b_load_12_phi_reg_526 <= ap_phi_reg_pp0_iter1_in_b_load_12_phi_reg_526;
        in_b_load_13_phi_reg_514 <= ap_phi_reg_pp0_iter1_in_b_load_13_phi_reg_514;
        in_b_load_14_phi_reg_502 <= ap_phi_reg_pp0_iter1_in_b_load_14_phi_reg_502;
        in_b_load_1_phi_reg_658 <= ap_phi_reg_pp0_iter1_in_b_load_1_phi_reg_658;
        in_b_load_2_phi_reg_646 <= ap_phi_reg_pp0_iter1_in_b_load_2_phi_reg_646;
        in_b_load_3_phi_reg_634 <= ap_phi_reg_pp0_iter1_in_b_load_3_phi_reg_634;
        in_b_load_4_phi_reg_622 <= ap_phi_reg_pp0_iter1_in_b_load_4_phi_reg_622;
        in_b_load_5_phi_reg_610 <= ap_phi_reg_pp0_iter1_in_b_load_5_phi_reg_610;
        in_b_load_6_phi_reg_598 <= ap_phi_reg_pp0_iter1_in_b_load_6_phi_reg_598;
        in_b_load_7_phi_reg_586 <= ap_phi_reg_pp0_iter1_in_b_load_7_phi_reg_586;
        in_b_load_8_phi_reg_574 <= ap_phi_reg_pp0_iter1_in_b_load_8_phi_reg_574;
        in_b_load_9_phi_reg_562 <= ap_phi_reg_pp0_iter1_in_b_load_9_phi_reg_562;
        in_b_load_phi_reg_670 <= ap_phi_reg_pp0_iter1_in_b_load_phi_reg_670;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_10_reg_912 <= in_b_q1;
        in_b_load_11_reg_917 <= in_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_803_pp0_iter1_reg == 1'd0))) begin
        in_b_load_10_rewind_reg_337 <= in_b_load_10_phi_reg_550;
        in_b_load_11_rewind_reg_322 <= in_b_load_11_phi_reg_538;
        in_b_load_12_rewind_reg_307 <= in_b_load_12_phi_reg_526;
        in_b_load_13_rewind_reg_292 <= in_b_load_13_phi_reg_514;
        in_b_load_14_rewind_reg_277 <= in_b_load_14_phi_reg_502;
        in_b_load_1_rewind_reg_472 <= in_b_load_1_phi_reg_658;
        in_b_load_2_rewind_reg_457 <= in_b_load_2_phi_reg_646;
        in_b_load_3_rewind_reg_442 <= in_b_load_3_phi_reg_634;
        in_b_load_4_rewind_reg_427 <= in_b_load_4_phi_reg_622;
        in_b_load_5_rewind_reg_412 <= in_b_load_5_phi_reg_610;
        in_b_load_6_rewind_reg_397 <= in_b_load_6_phi_reg_598;
        in_b_load_7_rewind_reg_382 <= in_b_load_7_phi_reg_586;
        in_b_load_8_rewind_reg_367 <= in_b_load_8_phi_reg_574;
        in_b_load_9_rewind_reg_352 <= in_b_load_9_phi_reg_562;
        in_b_load_rewind_reg_487 <= in_b_load_phi_reg_670;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_12_reg_932 <= in_b_q1;
        in_b_load_13_reg_937 <= in_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_1_reg_812 <= in_b_q0;
        in_b_load_reg_807 <= in_b_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_2_reg_832 <= in_b_q1;
        in_b_load_3_reg_837 <= in_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_4_reg_852 <= in_b_q1;
        in_b_load_5_reg_857 <= in_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_6_reg_872 <= in_b_q1;
        in_b_load_7_reg_877 <= in_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_b_load_8_reg_892 <= in_b_q1;
        in_b_load_9_reg_897 <= in_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_947 <= j_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        product_reg_992 <= product_fu_777_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_803_pp0_iter1_reg == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_343)) begin
        if ((icmp_ln6_reg_803 == 1'd1)) begin
            ap_phi_mux_j1_phi_fu_266_p6 = 4'd0;
        end else if ((icmp_ln6_reg_803 == 1'd0)) begin
            ap_phi_mux_j1_phi_fu_266_p6 = j_reg_947;
        end else begin
            ap_phi_mux_j1_phi_fu_266_p6 = j1_reg_262;
        end
    end else begin
        ap_phi_mux_j1_phi_fu_266_p6 = j1_reg_262;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln6_reg_803 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        in_a_ce0 = 1'b1;
    end else begin
        in_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            in_b_address0 = 64'd14;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            in_b_address0 = 64'd13;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            in_b_address0 = 64'd11;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            in_b_address0 = 64'd9;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            in_b_address0 = 64'd7;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            in_b_address0 = 64'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            in_b_address0 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            in_b_address0 = 64'd1;
        end else begin
            in_b_address0 = 'bx;
        end
    end else begin
        in_b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            in_b_address1 = 64'd12;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            in_b_address1 = 64'd10;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            in_b_address1 = 64'd8;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            in_b_address1 = 64'd6;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            in_b_address1 = 64'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            in_b_address1 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            in_b_address1 = 64'd0;
        end else begin
            in_b_address1 = 'bx;
        end
    end else begin
        in_b_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        in_b_ce0 = 1'b1;
    end else begin
        in_b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        in_b_ce1 = 1'b1;
    end else begin
        in_b_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_10_fu_747_p2 = (ap_phi_reg_pp0_iter1_in_b_load_13_phi_reg_514 + ap_phi_reg_pp0_iter1_in_b_load_14_phi_reg_502);

assign add_ln10_11_fu_753_p2 = (add_ln10_10_fu_747_p2 + add_ln10_9_fu_741_p2);

assign add_ln10_12_fu_763_p2 = (add_ln10_11_reg_977 + add_ln10_8_fu_759_p2);

assign add_ln10_13_fu_772_p2 = (add_ln10_12_reg_982 + add_ln10_5_fu_768_p2);

assign add_ln10_1_fu_705_p2 = (add_ln10_fu_699_p2 + ap_phi_reg_pp0_iter1_in_b_load_1_phi_reg_658);

assign add_ln10_2_fu_711_p2 = (ap_phi_reg_pp0_iter1_in_b_load_3_phi_reg_634 + ap_phi_reg_pp0_iter1_in_b_load_4_phi_reg_622);

assign add_ln10_3_fu_717_p2 = (ap_phi_reg_pp0_iter1_in_b_load_5_phi_reg_610 + ap_phi_reg_pp0_iter1_in_b_load_6_phi_reg_598);

assign add_ln10_4_fu_723_p2 = (add_ln10_3_fu_717_p2 + add_ln10_2_fu_711_p2);

assign add_ln10_5_fu_768_p2 = (add_ln10_4_reg_962 + add_ln10_1_reg_957);

assign add_ln10_6_fu_729_p2 = (ap_phi_reg_pp0_iter1_in_b_load_7_phi_reg_586 + ap_phi_reg_pp0_iter1_in_b_load_8_phi_reg_574);

assign add_ln10_7_fu_735_p2 = (ap_phi_reg_pp0_iter1_in_b_load_9_phi_reg_562 + ap_phi_reg_pp0_iter1_in_b_load_10_phi_reg_550);

assign add_ln10_8_fu_759_p2 = (add_ln10_7_reg_972 + add_ln10_6_reg_967);

assign add_ln10_9_fu_741_p2 = (ap_phi_reg_pp0_iter1_in_b_load_11_phi_reg_538 + ap_phi_reg_pp0_iter1_in_b_load_12_phi_reg_526);

assign add_ln10_fu_699_p2 = (ap_phi_reg_pp0_iter1_in_b_load_phi_reg_670 + ap_phi_reg_pp0_iter1_in_b_load_2_phi_reg_646);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_343 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_phi_reg_pp0_iter0_in_b_load_10_phi_reg_550 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_11_phi_reg_538 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_12_phi_reg_526 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_13_phi_reg_514 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_14_phi_reg_502 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_1_phi_reg_658 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_2_phi_reg_646 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_3_phi_reg_634 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_4_phi_reg_622 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_5_phi_reg_610 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_6_phi_reg_598 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_7_phi_reg_586 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_8_phi_reg_574 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_9_phi_reg_562 = 'bx;

assign ap_phi_reg_pp0_iter0_in_b_load_phi_reg_670 = 'bx;

assign icmp_ln6_fu_687_p2 = ((ap_phi_mux_j1_phi_fu_266_p6 == 4'd14) ? 1'b1 : 1'b0);

assign in_a_address0 = zext_ln6_fu_682_p1;

assign j_fu_693_p2 = (j1_reg_262 + 4'd1);

assign res_address0 = zext_ln6_reg_793_pp0_iter1_reg;

assign res_d0 = product_reg_992;

assign zext_ln6_fu_682_p1 = ap_phi_mux_j1_phi_fu_266_p6;

always @ (posedge ap_clk) begin
    zext_ln6_reg_793[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln6_reg_793_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //lab4_z1
