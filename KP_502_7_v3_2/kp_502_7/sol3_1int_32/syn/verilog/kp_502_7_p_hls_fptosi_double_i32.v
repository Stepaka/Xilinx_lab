// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kp_502_7_p_hls_fptosi_double_i32 (
        ap_clk,
        ap_rst,
        x,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [63:0] x;
output  [31:0] ap_return;

reg   [0:0] p_Result_s_reg_178;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] p_Result_s_reg_178_pp0_iter1_reg;
wire   [51:0] tmp_65_fu_66_p1;
reg   [51:0] tmp_65_reg_183;
wire   [0:0] isNeg_fu_80_p3;
reg   [0:0] isNeg_reg_188;
wire   [11:0] ush_fu_98_p3;
reg   [11:0] ush_reg_193;
wire   [31:0] val_fu_160_p3;
reg   [31:0] val_reg_198;
wire    ap_block_pp0_stage0;
wire   [63:0] data_V_fu_44_p1;
wire   [10:0] tmp_64_fu_56_p4;
wire   [11:0] zext_ln513_fu_70_p1;
wire   [11:0] add_ln513_fu_74_p2;
wire   [10:0] sub_ln1364_fu_88_p2;
wire  signed [11:0] sext_ln1364_fu_94_p1;
wire   [53:0] mantissa_fu_106_p4;
wire  signed [31:0] sext_ln1340_fu_119_p1;
wire   [136:0] zext_ln15_fu_115_p1;
wire   [136:0] zext_ln1340_fu_122_p1;
wire   [136:0] r_V_fu_126_p2;
wire   [0:0] tmp_fu_138_p3;
wire   [136:0] r_V_1_fu_132_p2;
wire   [31:0] zext_ln671_fu_146_p1;
wire   [31:0] tmp_s_fu_150_p4;
wire   [31:0] result_V_2_fu_167_p2;
reg   [63:0] x_int_reg;
wire    ap_ce_reg;

always @ (posedge ap_clk) begin
    x_int_reg <= x;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        isNeg_reg_188 <= add_ln513_fu_74_p2[32'd11];
        p_Result_s_reg_178 <= data_V_fu_44_p1[32'd63];
        p_Result_s_reg_178_pp0_iter1_reg <= p_Result_s_reg_178;
        tmp_65_reg_183 <= tmp_65_fu_66_p1;
        ush_reg_193 <= ush_fu_98_p3;
        val_reg_198 <= val_fu_160_p3;
    end
end

assign add_ln513_fu_74_p2 = ($signed(zext_ln513_fu_70_p1) + $signed(12'd3073));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_return = ((p_Result_s_reg_178_pp0_iter1_reg[0:0] == 1'b1) ? result_V_2_fu_167_p2 : val_reg_198);

assign data_V_fu_44_p1 = x_int_reg;

assign isNeg_fu_80_p3 = add_ln513_fu_74_p2[32'd11];

assign mantissa_fu_106_p4 = {{{{1'd1}, {tmp_65_reg_183}}}, {1'd0}};

assign r_V_1_fu_132_p2 = zext_ln15_fu_115_p1 << zext_ln1340_fu_122_p1;

assign r_V_fu_126_p2 = zext_ln15_fu_115_p1 >> zext_ln1340_fu_122_p1;

assign result_V_2_fu_167_p2 = (32'd0 - val_reg_198);

assign sext_ln1340_fu_119_p1 = $signed(ush_reg_193);

assign sext_ln1364_fu_94_p1 = $signed(sub_ln1364_fu_88_p2);

assign sub_ln1364_fu_88_p2 = (11'd1023 - tmp_64_fu_56_p4);

assign tmp_64_fu_56_p4 = {{data_V_fu_44_p1[62:52]}};

assign tmp_65_fu_66_p1 = data_V_fu_44_p1[51:0];

assign tmp_fu_138_p3 = r_V_fu_126_p2[32'd53];

assign tmp_s_fu_150_p4 = {{r_V_1_fu_132_p2[84:53]}};

assign ush_fu_98_p3 = ((isNeg_fu_80_p3[0:0] == 1'b1) ? sext_ln1364_fu_94_p1 : add_ln513_fu_74_p2);

assign val_fu_160_p3 = ((isNeg_reg_188[0:0] == 1'b1) ? zext_ln671_fu_146_p1 : tmp_s_fu_150_p4);

assign zext_ln1340_fu_122_p1 = $unsigned(sext_ln1340_fu_119_p1);

assign zext_ln15_fu_115_p1 = mantissa_fu_106_p4;

assign zext_ln513_fu_70_p1 = tmp_64_fu_56_p4;

assign zext_ln671_fu_146_p1 = tmp_fu_138_p3;

endmodule //kp_502_7_p_hls_fptosi_double_i32
