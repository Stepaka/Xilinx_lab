// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kp_502_7_kp_502_7,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-sbv484-2,HLS_INPUT_CLOCK=14.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.766000,HLS_SYN_LAT=65,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6046,HLS_SYN_LUT=4471,HLS_VERSION=2021_2}" *)

module kp_502_7 (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_0,
        A_1,
        A_2,
        A_3,
        A_4,
        A_5,
        A_6,
        A_7,
        B_0,
        B_1,
        B_2,
        B_3,
        B_4,
        B_5,
        B_6,
        B_7,
        C_0,
        C_1,
        C_2,
        C_3,
        C_4,
        C_5,
        C_6,
        C_7,
        X1_0,
        X1_0_ap_vld,
        X1_1,
        X1_1_ap_vld,
        X1_2,
        X1_2_ap_vld,
        X1_3,
        X1_3_ap_vld,
        X1_4,
        X1_4_ap_vld,
        X1_5,
        X1_5_ap_vld,
        X1_6,
        X1_6_ap_vld,
        X1_7,
        X1_7_ap_vld,
        X2_0,
        X2_0_ap_vld,
        X2_1,
        X2_1_ap_vld,
        X2_2,
        X2_2_ap_vld,
        X2_3,
        X2_3_ap_vld,
        X2_4,
        X2_4_ap_vld,
        X2_5,
        X2_5_ap_vld,
        X2_6,
        X2_6_ap_vld,
        X2_7,
        X2_7_ap_vld,
        D_0,
        D_0_ap_vld,
        D_1,
        D_1_ap_vld,
        D_2,
        D_2_ap_vld,
        D_3,
        D_3_ap_vld,
        D_4,
        D_4_ap_vld,
        D_5,
        D_5_ap_vld,
        D_6,
        D_6_ap_vld,
        D_7,
        D_7_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] A_0;
input  [63:0] A_1;
input  [63:0] A_2;
input  [63:0] A_3;
input  [63:0] A_4;
input  [63:0] A_5;
input  [63:0] A_6;
input  [63:0] A_7;
input  [63:0] B_0;
input  [63:0] B_1;
input  [63:0] B_2;
input  [63:0] B_3;
input  [63:0] B_4;
input  [63:0] B_5;
input  [63:0] B_6;
input  [63:0] B_7;
input  [63:0] C_0;
input  [63:0] C_1;
input  [63:0] C_2;
input  [63:0] C_3;
input  [63:0] C_4;
input  [63:0] C_5;
input  [63:0] C_6;
input  [63:0] C_7;
output  [63:0] X1_0;
output   X1_0_ap_vld;
output  [63:0] X1_1;
output   X1_1_ap_vld;
output  [63:0] X1_2;
output   X1_2_ap_vld;
output  [63:0] X1_3;
output   X1_3_ap_vld;
output  [63:0] X1_4;
output   X1_4_ap_vld;
output  [63:0] X1_5;
output   X1_5_ap_vld;
output  [63:0] X1_6;
output   X1_6_ap_vld;
output  [63:0] X1_7;
output   X1_7_ap_vld;
output  [63:0] X2_0;
output   X2_0_ap_vld;
output  [63:0] X2_1;
output   X2_1_ap_vld;
output  [63:0] X2_2;
output   X2_2_ap_vld;
output  [63:0] X2_3;
output   X2_3_ap_vld;
output  [63:0] X2_4;
output   X2_4_ap_vld;
output  [63:0] X2_5;
output   X2_5_ap_vld;
output  [63:0] X2_6;
output   X2_6_ap_vld;
output  [63:0] X2_7;
output   X2_7_ap_vld;
output  [63:0] D_0;
output   D_0_ap_vld;
output  [63:0] D_1;
output   D_1_ap_vld;
output  [63:0] D_2;
output   D_2_ap_vld;
output  [63:0] D_3;
output   D_3_ap_vld;
output  [63:0] D_4;
output   D_4_ap_vld;
output  [63:0] D_5;
output   D_5_ap_vld;
output  [63:0] D_6;
output   D_6_ap_vld;
output  [63:0] D_7;
output   D_7_ap_vld;

reg ap_idle;
reg[63:0] X1_0;
reg X1_0_ap_vld;
reg[63:0] X1_1;
reg X1_1_ap_vld;
reg[63:0] X1_2;
reg X1_2_ap_vld;
reg[63:0] X1_3;
reg X1_3_ap_vld;
reg[63:0] X1_4;
reg X1_4_ap_vld;
reg[63:0] X1_5;
reg X1_5_ap_vld;
reg[63:0] X1_6;
reg X1_6_ap_vld;
reg[63:0] X1_7;
reg X1_7_ap_vld;
reg[63:0] X2_0;
reg X2_0_ap_vld;
reg[63:0] X2_1;
reg X2_1_ap_vld;
reg[63:0] X2_2;
reg X2_2_ap_vld;
reg[63:0] X2_3;
reg X2_3_ap_vld;
reg[63:0] X2_4;
reg X2_4_ap_vld;
reg[63:0] X2_5;
reg X2_5_ap_vld;
reg[63:0] X2_6;
reg X2_6_ap_vld;
reg[63:0] X2_7;
reg X2_7_ap_vld;
reg D_0_ap_vld;
reg D_1_ap_vld;
reg D_2_ap_vld;
reg D_3_ap_vld;
reg D_4_ap_vld;
reg D_5_ap_vld;
reg D_6_ap_vld;
reg D_7_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln5_fu_673_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] empty_fu_569_p1;
reg   [63:0] empty_reg_843;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] empty_reg_843_pp0_iter1_reg;
reg   [63:0] empty_reg_843_pp0_iter2_reg;
reg   [63:0] empty_reg_843_pp0_iter3_reg;
wire   [63:0] empty_8_fu_573_p1;
reg   [63:0] empty_8_reg_848;
reg   [63:0] empty_8_reg_848_pp0_iter1_reg;
reg   [63:0] empty_8_reg_848_pp0_iter2_reg;
reg   [63:0] empty_8_reg_848_pp0_iter3_reg;
wire   [63:0] empty_9_fu_577_p1;
reg   [63:0] empty_9_reg_853;
reg   [63:0] empty_9_reg_853_pp0_iter1_reg;
reg   [63:0] empty_9_reg_853_pp0_iter2_reg;
reg   [63:0] empty_9_reg_853_pp0_iter3_reg;
wire   [63:0] empty_10_fu_581_p1;
reg   [63:0] empty_10_reg_858;
reg   [63:0] empty_10_reg_858_pp0_iter1_reg;
reg   [63:0] empty_10_reg_858_pp0_iter2_reg;
reg   [63:0] empty_10_reg_858_pp0_iter3_reg;
wire   [63:0] empty_11_fu_585_p1;
reg   [63:0] empty_11_reg_863;
reg   [63:0] empty_11_reg_863_pp0_iter1_reg;
reg   [63:0] empty_11_reg_863_pp0_iter2_reg;
reg   [63:0] empty_11_reg_863_pp0_iter3_reg;
wire   [63:0] empty_12_fu_589_p1;
reg   [63:0] empty_12_reg_868;
reg   [63:0] empty_12_reg_868_pp0_iter1_reg;
reg   [63:0] empty_12_reg_868_pp0_iter2_reg;
reg   [63:0] empty_12_reg_868_pp0_iter3_reg;
wire   [63:0] empty_13_fu_593_p1;
reg   [63:0] empty_13_reg_873;
reg   [63:0] empty_13_reg_873_pp0_iter1_reg;
reg   [63:0] empty_13_reg_873_pp0_iter2_reg;
reg   [63:0] empty_13_reg_873_pp0_iter3_reg;
wire   [63:0] empty_14_fu_597_p1;
reg   [63:0] empty_14_reg_878;
reg   [63:0] empty_14_reg_878_pp0_iter1_reg;
reg   [63:0] empty_14_reg_878_pp0_iter2_reg;
reg   [63:0] empty_14_reg_878_pp0_iter3_reg;
wire   [63:0] empty_23_fu_633_p1;
reg   [63:0] empty_23_reg_883;
reg   [63:0] empty_23_reg_883_pp0_iter1_reg;
reg   [63:0] empty_23_reg_883_pp0_iter2_reg;
reg   [63:0] empty_23_reg_883_pp0_iter3_reg;
wire   [63:0] empty_24_fu_637_p1;
reg   [63:0] empty_24_reg_888;
reg   [63:0] empty_24_reg_888_pp0_iter1_reg;
reg   [63:0] empty_24_reg_888_pp0_iter2_reg;
reg   [63:0] empty_24_reg_888_pp0_iter3_reg;
wire   [63:0] empty_25_fu_641_p1;
reg   [63:0] empty_25_reg_893;
reg   [63:0] empty_25_reg_893_pp0_iter1_reg;
reg   [63:0] empty_25_reg_893_pp0_iter2_reg;
reg   [63:0] empty_25_reg_893_pp0_iter3_reg;
wire   [63:0] empty_26_fu_645_p1;
reg   [63:0] empty_26_reg_898;
reg   [63:0] empty_26_reg_898_pp0_iter1_reg;
reg   [63:0] empty_26_reg_898_pp0_iter2_reg;
reg   [63:0] empty_26_reg_898_pp0_iter3_reg;
wire   [63:0] empty_27_fu_649_p1;
reg   [63:0] empty_27_reg_903;
reg   [63:0] empty_27_reg_903_pp0_iter1_reg;
reg   [63:0] empty_27_reg_903_pp0_iter2_reg;
reg   [63:0] empty_27_reg_903_pp0_iter3_reg;
wire   [63:0] empty_28_fu_653_p1;
reg   [63:0] empty_28_reg_908;
reg   [63:0] empty_28_reg_908_pp0_iter1_reg;
reg   [63:0] empty_28_reg_908_pp0_iter2_reg;
reg   [63:0] empty_28_reg_908_pp0_iter3_reg;
wire   [63:0] empty_29_fu_657_p1;
reg   [63:0] empty_29_reg_913;
reg   [63:0] empty_29_reg_913_pp0_iter1_reg;
reg   [63:0] empty_29_reg_913_pp0_iter2_reg;
reg   [63:0] empty_29_reg_913_pp0_iter3_reg;
wire   [63:0] empty_30_fu_661_p1;
reg   [63:0] empty_30_reg_918;
reg   [63:0] empty_30_reg_918_pp0_iter1_reg;
reg   [63:0] empty_30_reg_918_pp0_iter2_reg;
reg   [63:0] empty_30_reg_918_pp0_iter3_reg;
reg   [3:0] i_1_reg_923;
reg   [3:0] i_1_reg_923_pp0_iter1_reg;
reg   [3:0] i_1_reg_923_pp0_iter2_reg;
reg   [3:0] i_1_reg_923_pp0_iter3_reg;
wire   [63:0] temp_A_fu_685_p10;
reg   [63:0] temp_A_reg_934;
reg   [63:0] temp_A_reg_934_pp0_iter1_reg;
reg   [63:0] temp_A_reg_934_pp0_iter2_reg;
reg   [63:0] temp_A_reg_934_pp0_iter3_reg;
reg   [63:0] temp_A_reg_934_pp0_iter4_reg;
reg   [63:0] temp_A_reg_934_pp0_iter5_reg;
reg   [63:0] temp_A_reg_934_pp0_iter6_reg;
reg   [63:0] temp_A_reg_934_pp0_iter7_reg;
reg   [63:0] temp_A_reg_934_pp0_iter8_reg;
reg   [63:0] temp_A_reg_934_pp0_iter9_reg;
reg   [63:0] temp_A_reg_934_pp0_iter10_reg;
reg   [63:0] temp_A_reg_934_pp0_iter11_reg;
reg   [63:0] temp_A_reg_934_pp0_iter12_reg;
reg   [63:0] temp_A_reg_934_pp0_iter13_reg;
wire   [63:0] temp_B_fu_712_p10;
reg   [63:0] temp_B_reg_940;
reg   [63:0] temp_B_reg_940_pp0_iter5_reg;
reg   [63:0] temp_B_reg_940_pp0_iter6_reg;
reg   [63:0] temp_B_reg_940_pp0_iter7_reg;
reg   [63:0] temp_B_reg_940_pp0_iter8_reg;
reg   [63:0] temp_B_reg_940_pp0_iter9_reg;
reg   [63:0] temp_B_reg_940_pp0_iter10_reg;
reg   [63:0] temp_B_reg_940_pp0_iter11_reg;
reg   [63:0] temp_B_reg_940_pp0_iter12_reg;
reg   [63:0] temp_B_reg_940_pp0_iter13_reg;
reg   [63:0] temp_B_reg_940_pp0_iter14_reg;
reg   [63:0] temp_B_reg_940_pp0_iter15_reg;
reg   [63:0] temp_B_reg_940_pp0_iter16_reg;
reg   [63:0] temp_B_reg_940_pp0_iter17_reg;
reg   [63:0] temp_B_reg_940_pp0_iter18_reg;
reg   [63:0] temp_B_reg_940_pp0_iter19_reg;
reg   [63:0] temp_B_reg_940_pp0_iter20_reg;
reg   [63:0] temp_B_reg_940_pp0_iter21_reg;
reg   [63:0] temp_B_reg_940_pp0_iter22_reg;
reg   [63:0] temp_B_reg_940_pp0_iter23_reg;
reg   [63:0] temp_B_reg_940_pp0_iter24_reg;
reg   [63:0] temp_B_reg_940_pp0_iter25_reg;
reg   [63:0] temp_B_reg_940_pp0_iter26_reg;
reg   [63:0] temp_B_reg_940_pp0_iter27_reg;
reg   [63:0] temp_B_reg_940_pp0_iter28_reg;
reg   [63:0] temp_B_reg_940_pp0_iter29_reg;
reg   [63:0] temp_B_reg_940_pp0_iter30_reg;
reg   [63:0] temp_B_reg_940_pp0_iter31_reg;
wire   [63:0] grp_fu_524_p2;
reg   [63:0] mul3_reg_948;
wire   [63:0] tmp_fu_725_p10;
reg   [63:0] tmp_reg_953;
wire   [2:0] trunc_ln10_fu_738_p1;
reg   [2:0] trunc_ln10_reg_958;
reg   [2:0] trunc_ln10_reg_958_pp0_iter5_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter6_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter7_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter8_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter9_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter10_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter11_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter12_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter13_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter14_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter15_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter16_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter17_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter18_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter19_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter20_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter21_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter22_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter23_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter24_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter25_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter26_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter27_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter28_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter29_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter30_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter31_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter32_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter33_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter34_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter35_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter36_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter37_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter38_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter39_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter40_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter41_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter42_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter43_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter44_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter45_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter46_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter47_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter48_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter49_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter50_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter51_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter52_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter53_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter54_reg;
reg   [2:0] trunc_ln10_reg_958_pp0_iter55_reg;
wire   [63:0] grp_fu_529_p2;
reg   [63:0] mul_reg_962;
wire   [63:0] grp_fu_533_p2;
reg   [63:0] mul6_reg_967;
wire   [63:0] grp_fu_512_p2;
reg   [63:0] x_assign_reg_972;
reg   [63:0] x_assign_reg_972_pp0_iter13_reg;
reg   [63:0] x_assign_reg_972_pp0_iter14_reg;
wire   [0:0] or_ln13_fu_778_p2;
reg   [0:0] or_ln13_reg_980;
wire   [0:0] and_ln13_fu_784_p2;
reg   [0:0] and_ln13_reg_985;
reg   [0:0] and_ln13_reg_985_pp0_iter15_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter16_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter17_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter18_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter19_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter20_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter21_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter22_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter23_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter24_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter25_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter26_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter27_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter28_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter29_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter30_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter31_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter32_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter33_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter34_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter35_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter36_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter37_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter38_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter39_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter40_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter41_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter42_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter43_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter44_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter45_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter46_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter47_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter48_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter49_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter50_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter51_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter52_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter53_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter54_reg;
reg   [0:0] and_ln13_reg_985_pp0_iter55_reg;
wire   [0:0] and_ln18_fu_790_p2;
reg   [0:0] and_ln18_reg_989;
reg   [0:0] and_ln18_reg_989_pp0_iter16_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter17_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter18_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter19_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter20_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter21_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter22_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter23_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter24_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter25_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter26_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter27_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter28_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter29_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter30_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter31_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter32_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter33_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter34_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter35_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter36_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter37_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter38_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter39_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter40_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter41_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter42_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter43_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter44_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter45_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter46_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter47_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter48_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter49_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter50_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter51_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter52_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter53_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter54_reg;
reg   [0:0] and_ln18_reg_989_pp0_iter55_reg;
wire   [63:0] bitcast_ln20_2_fu_804_p1;
reg   [63:0] bitcast_ln20_2_reg_993;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter18_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter19_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter20_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter21_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter22_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter23_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter24_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter25_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter26_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter27_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter28_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter29_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter30_reg;
reg   [63:0] bitcast_ln20_2_reg_993_pp0_iter31_reg;
wire   [63:0] grp_fu_537_p2;
reg   [63:0] mul1_reg_999;
reg   [63:0] mul1_reg_999_pp0_iter18_reg;
reg   [63:0] mul1_reg_999_pp0_iter19_reg;
reg   [63:0] mul1_reg_999_pp0_iter20_reg;
reg   [63:0] mul1_reg_999_pp0_iter21_reg;
reg   [63:0] mul1_reg_999_pp0_iter22_reg;
reg   [63:0] mul1_reg_999_pp0_iter23_reg;
reg   [63:0] mul1_reg_999_pp0_iter24_reg;
reg   [63:0] mul1_reg_999_pp0_iter25_reg;
reg   [63:0] mul1_reg_999_pp0_iter26_reg;
reg   [63:0] mul1_reg_999_pp0_iter27_reg;
reg   [63:0] mul1_reg_999_pp0_iter28_reg;
reg   [63:0] mul1_reg_999_pp0_iter29_reg;
reg   [63:0] mul1_reg_999_pp0_iter30_reg;
reg   [63:0] mul1_reg_999_pp0_iter31_reg;
reg   [63:0] mul1_reg_999_pp0_iter32_reg;
reg   [63:0] mul1_reg_999_pp0_iter33_reg;
reg   [63:0] mul1_reg_999_pp0_iter34_reg;
reg   [63:0] mul1_reg_999_pp0_iter35_reg;
wire   [63:0] grp_fu_564_p2;
reg   [63:0] temp_D_reg_1006;
wire   [63:0] grp_fu_516_p2;
reg   [63:0] sub_reg_1012;
wire   [63:0] grp_fu_520_p2;
reg   [63:0] add_reg_1017;
wire   [63:0] bitcast_ln20_fu_808_p1;
reg   [63:0] bitcast_ln20_reg_1022;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter39_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter40_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter41_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter42_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter43_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter44_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter45_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter46_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter47_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter48_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter49_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter50_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter51_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter52_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter53_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter54_reg;
reg   [63:0] bitcast_ln20_reg_1022_pp0_iter55_reg;
reg   [3:0] i_fu_180;
wire   [3:0] add_ln5_fu_679_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0;
wire   [63:0] bitcast_ln10_fu_741_p1;
wire    ap_block_pp0_stage0_01001;
wire   [63:0] bitcast_ln29_fu_812_p1;
wire   [63:0] bitcast_ln30_fu_824_p1;
wire   [63:0] temp_A_fu_685_p1;
wire   [63:0] temp_A_fu_685_p2;
wire   [63:0] temp_A_fu_685_p3;
wire   [63:0] temp_A_fu_685_p4;
wire   [63:0] temp_A_fu_685_p5;
wire   [63:0] temp_A_fu_685_p6;
wire   [63:0] temp_A_fu_685_p7;
wire   [63:0] temp_A_fu_685_p8;
wire   [10:0] tmp_1_fu_752_p4;
wire   [51:0] trunc_ln13_fu_762_p1;
wire   [0:0] icmp_ln13_1_fu_772_p2;
wire   [0:0] icmp_ln13_fu_766_p2;
wire   [0:0] grp_fu_554_p2;
wire   [0:0] grp_fu_559_p2;
wire   [63:0] bitcast_ln20_1_fu_795_p1;
wire   [63:0] xor_ln20_fu_798_p2;
wire   [63:0] grp_fu_542_p2;
wire   [63:0] grp_fu_546_p2;
wire   [63:0] grp_fu_550_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1478;
reg    ap_condition_1483;
reg    ap_condition_1486;
reg    ap_condition_1489;
reg    ap_condition_1492;
reg    ap_condition_1495;
reg    ap_condition_1498;
reg    ap_condition_1501;
reg    ap_condition_905;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kp_502_7_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_962),
    .din1(mul6_reg_967),
    .ce(1'b1),
    .dout(grp_fu_512_p2)
);

kp_502_7_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln20_2_reg_993_pp0_iter31_reg),
    .din1(temp_D_reg_1006),
    .ce(1'b1),
    .dout(grp_fu_516_p2)
);

kp_502_7_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_D_reg_1006),
    .din1(temp_B_reg_940_pp0_iter31_reg),
    .ce(1'b1),
    .dout(grp_fu_520_p2)
);

kp_502_7_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_A_reg_934),
    .din1(64'd4616189618054758400),
    .ce(1'b1),
    .dout(grp_fu_524_p2)
);

kp_502_7_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_B_reg_940),
    .din1(temp_B_reg_940),
    .ce(1'b1),
    .dout(grp_fu_529_p2)
);

kp_502_7_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul3_reg_948),
    .din1(tmp_reg_953),
    .ce(1'b1),
    .dout(grp_fu_533_p2)
);

kp_502_7_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(temp_A_reg_934_pp0_iter13_reg),
    .din1(64'd4611686018427387904),
    .ce(1'b1),
    .dout(grp_fu_537_p2)
);

kp_502_7_ddiv_64ns_64ns_64_21_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_21_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln20_2_reg_993),
    .din1(mul1_reg_999),
    .ce(1'b1),
    .dout(grp_fu_542_p2)
);

kp_502_7_ddiv_64ns_64ns_64_21_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_21_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_reg_1012),
    .din1(mul1_reg_999_pp0_iter35_reg),
    .ce(1'b1),
    .dout(grp_fu_546_p2)
);

kp_502_7_ddiv_64ns_64ns_64_21_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_21_no_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_reg_1017),
    .din1(mul1_reg_999_pp0_iter35_reg),
    .ce(1'b1),
    .dout(grp_fu_550_p2)
);

kp_502_7_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_assign_reg_972),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_554_p2)
);

kp_502_7_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_assign_reg_972_pp0_iter13_reg),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_559_p2)
);

kp_502_7_dsqrt_64ns_64ns_64_17_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_17_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(x_assign_reg_972_pp0_iter14_reg),
    .ce(1'b1),
    .dout(grp_fu_564_p2)
);

kp_502_7_mux_84_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_84_64_1_1_U14(
    .din0(temp_A_fu_685_p1),
    .din1(temp_A_fu_685_p2),
    .din2(temp_A_fu_685_p3),
    .din3(temp_A_fu_685_p4),
    .din4(temp_A_fu_685_p5),
    .din5(temp_A_fu_685_p6),
    .din6(temp_A_fu_685_p7),
    .din7(temp_A_fu_685_p8),
    .din8(ap_sig_allocacmp_i_1),
    .dout(temp_A_fu_685_p10)
);

kp_502_7_mux_84_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_84_64_1_1_U15(
    .din0(empty_reg_843_pp0_iter3_reg),
    .din1(empty_8_reg_848_pp0_iter3_reg),
    .din2(empty_9_reg_853_pp0_iter3_reg),
    .din3(empty_10_reg_858_pp0_iter3_reg),
    .din4(empty_11_reg_863_pp0_iter3_reg),
    .din5(empty_12_reg_868_pp0_iter3_reg),
    .din6(empty_13_reg_873_pp0_iter3_reg),
    .din7(empty_14_reg_878_pp0_iter3_reg),
    .din8(i_1_reg_923_pp0_iter3_reg),
    .dout(temp_B_fu_712_p10)
);

kp_502_7_mux_84_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_84_64_1_1_U16(
    .din0(empty_23_reg_883_pp0_iter3_reg),
    .din1(empty_24_reg_888_pp0_iter3_reg),
    .din2(empty_25_reg_893_pp0_iter3_reg),
    .din3(empty_26_reg_898_pp0_iter3_reg),
    .din4(empty_27_reg_903_pp0_iter3_reg),
    .din5(empty_28_reg_908_pp0_iter3_reg),
    .din6(empty_29_reg_913_pp0_iter3_reg),
    .din7(empty_30_reg_918_pp0_iter3_reg),
    .din8(i_1_reg_923_pp0_iter3_reg),
    .dout(tmp_fu_725_p10)
);

kp_502_7_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter55_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_905)) begin
        if ((icmp_ln5_fu_673_p2 == 1'd0)) begin
            i_fu_180 <= add_ln5_fu_679_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_180 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln18_reg_989_pp0_iter34_reg) & (1'd0 == and_ln13_reg_985_pp0_iter34_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_reg_1017 <= grp_fu_520_p2;
        sub_reg_1012 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln13_reg_985 <= and_ln13_fu_784_p2;
        and_ln13_reg_985_pp0_iter15_reg <= and_ln13_reg_985;
        and_ln13_reg_985_pp0_iter16_reg <= and_ln13_reg_985_pp0_iter15_reg;
        and_ln13_reg_985_pp0_iter17_reg <= and_ln13_reg_985_pp0_iter16_reg;
        and_ln13_reg_985_pp0_iter18_reg <= and_ln13_reg_985_pp0_iter17_reg;
        and_ln13_reg_985_pp0_iter19_reg <= and_ln13_reg_985_pp0_iter18_reg;
        and_ln13_reg_985_pp0_iter20_reg <= and_ln13_reg_985_pp0_iter19_reg;
        and_ln13_reg_985_pp0_iter21_reg <= and_ln13_reg_985_pp0_iter20_reg;
        and_ln13_reg_985_pp0_iter22_reg <= and_ln13_reg_985_pp0_iter21_reg;
        and_ln13_reg_985_pp0_iter23_reg <= and_ln13_reg_985_pp0_iter22_reg;
        and_ln13_reg_985_pp0_iter24_reg <= and_ln13_reg_985_pp0_iter23_reg;
        and_ln13_reg_985_pp0_iter25_reg <= and_ln13_reg_985_pp0_iter24_reg;
        and_ln13_reg_985_pp0_iter26_reg <= and_ln13_reg_985_pp0_iter25_reg;
        and_ln13_reg_985_pp0_iter27_reg <= and_ln13_reg_985_pp0_iter26_reg;
        and_ln13_reg_985_pp0_iter28_reg <= and_ln13_reg_985_pp0_iter27_reg;
        and_ln13_reg_985_pp0_iter29_reg <= and_ln13_reg_985_pp0_iter28_reg;
        and_ln13_reg_985_pp0_iter30_reg <= and_ln13_reg_985_pp0_iter29_reg;
        and_ln13_reg_985_pp0_iter31_reg <= and_ln13_reg_985_pp0_iter30_reg;
        and_ln13_reg_985_pp0_iter32_reg <= and_ln13_reg_985_pp0_iter31_reg;
        and_ln13_reg_985_pp0_iter33_reg <= and_ln13_reg_985_pp0_iter32_reg;
        and_ln13_reg_985_pp0_iter34_reg <= and_ln13_reg_985_pp0_iter33_reg;
        and_ln13_reg_985_pp0_iter35_reg <= and_ln13_reg_985_pp0_iter34_reg;
        and_ln13_reg_985_pp0_iter36_reg <= and_ln13_reg_985_pp0_iter35_reg;
        and_ln13_reg_985_pp0_iter37_reg <= and_ln13_reg_985_pp0_iter36_reg;
        and_ln13_reg_985_pp0_iter38_reg <= and_ln13_reg_985_pp0_iter37_reg;
        and_ln13_reg_985_pp0_iter39_reg <= and_ln13_reg_985_pp0_iter38_reg;
        and_ln13_reg_985_pp0_iter40_reg <= and_ln13_reg_985_pp0_iter39_reg;
        and_ln13_reg_985_pp0_iter41_reg <= and_ln13_reg_985_pp0_iter40_reg;
        and_ln13_reg_985_pp0_iter42_reg <= and_ln13_reg_985_pp0_iter41_reg;
        and_ln13_reg_985_pp0_iter43_reg <= and_ln13_reg_985_pp0_iter42_reg;
        and_ln13_reg_985_pp0_iter44_reg <= and_ln13_reg_985_pp0_iter43_reg;
        and_ln13_reg_985_pp0_iter45_reg <= and_ln13_reg_985_pp0_iter44_reg;
        and_ln13_reg_985_pp0_iter46_reg <= and_ln13_reg_985_pp0_iter45_reg;
        and_ln13_reg_985_pp0_iter47_reg <= and_ln13_reg_985_pp0_iter46_reg;
        and_ln13_reg_985_pp0_iter48_reg <= and_ln13_reg_985_pp0_iter47_reg;
        and_ln13_reg_985_pp0_iter49_reg <= and_ln13_reg_985_pp0_iter48_reg;
        and_ln13_reg_985_pp0_iter50_reg <= and_ln13_reg_985_pp0_iter49_reg;
        and_ln13_reg_985_pp0_iter51_reg <= and_ln13_reg_985_pp0_iter50_reg;
        and_ln13_reg_985_pp0_iter52_reg <= and_ln13_reg_985_pp0_iter51_reg;
        and_ln13_reg_985_pp0_iter53_reg <= and_ln13_reg_985_pp0_iter52_reg;
        and_ln13_reg_985_pp0_iter54_reg <= and_ln13_reg_985_pp0_iter53_reg;
        and_ln13_reg_985_pp0_iter55_reg <= and_ln13_reg_985_pp0_iter54_reg;
        and_ln18_reg_989_pp0_iter16_reg <= and_ln18_reg_989;
        and_ln18_reg_989_pp0_iter17_reg <= and_ln18_reg_989_pp0_iter16_reg;
        and_ln18_reg_989_pp0_iter18_reg <= and_ln18_reg_989_pp0_iter17_reg;
        and_ln18_reg_989_pp0_iter19_reg <= and_ln18_reg_989_pp0_iter18_reg;
        and_ln18_reg_989_pp0_iter20_reg <= and_ln18_reg_989_pp0_iter19_reg;
        and_ln18_reg_989_pp0_iter21_reg <= and_ln18_reg_989_pp0_iter20_reg;
        and_ln18_reg_989_pp0_iter22_reg <= and_ln18_reg_989_pp0_iter21_reg;
        and_ln18_reg_989_pp0_iter23_reg <= and_ln18_reg_989_pp0_iter22_reg;
        and_ln18_reg_989_pp0_iter24_reg <= and_ln18_reg_989_pp0_iter23_reg;
        and_ln18_reg_989_pp0_iter25_reg <= and_ln18_reg_989_pp0_iter24_reg;
        and_ln18_reg_989_pp0_iter26_reg <= and_ln18_reg_989_pp0_iter25_reg;
        and_ln18_reg_989_pp0_iter27_reg <= and_ln18_reg_989_pp0_iter26_reg;
        and_ln18_reg_989_pp0_iter28_reg <= and_ln18_reg_989_pp0_iter27_reg;
        and_ln18_reg_989_pp0_iter29_reg <= and_ln18_reg_989_pp0_iter28_reg;
        and_ln18_reg_989_pp0_iter30_reg <= and_ln18_reg_989_pp0_iter29_reg;
        and_ln18_reg_989_pp0_iter31_reg <= and_ln18_reg_989_pp0_iter30_reg;
        and_ln18_reg_989_pp0_iter32_reg <= and_ln18_reg_989_pp0_iter31_reg;
        and_ln18_reg_989_pp0_iter33_reg <= and_ln18_reg_989_pp0_iter32_reg;
        and_ln18_reg_989_pp0_iter34_reg <= and_ln18_reg_989_pp0_iter33_reg;
        and_ln18_reg_989_pp0_iter35_reg <= and_ln18_reg_989_pp0_iter34_reg;
        and_ln18_reg_989_pp0_iter36_reg <= and_ln18_reg_989_pp0_iter35_reg;
        and_ln18_reg_989_pp0_iter37_reg <= and_ln18_reg_989_pp0_iter36_reg;
        and_ln18_reg_989_pp0_iter38_reg <= and_ln18_reg_989_pp0_iter37_reg;
        and_ln18_reg_989_pp0_iter39_reg <= and_ln18_reg_989_pp0_iter38_reg;
        and_ln18_reg_989_pp0_iter40_reg <= and_ln18_reg_989_pp0_iter39_reg;
        and_ln18_reg_989_pp0_iter41_reg <= and_ln18_reg_989_pp0_iter40_reg;
        and_ln18_reg_989_pp0_iter42_reg <= and_ln18_reg_989_pp0_iter41_reg;
        and_ln18_reg_989_pp0_iter43_reg <= and_ln18_reg_989_pp0_iter42_reg;
        and_ln18_reg_989_pp0_iter44_reg <= and_ln18_reg_989_pp0_iter43_reg;
        and_ln18_reg_989_pp0_iter45_reg <= and_ln18_reg_989_pp0_iter44_reg;
        and_ln18_reg_989_pp0_iter46_reg <= and_ln18_reg_989_pp0_iter45_reg;
        and_ln18_reg_989_pp0_iter47_reg <= and_ln18_reg_989_pp0_iter46_reg;
        and_ln18_reg_989_pp0_iter48_reg <= and_ln18_reg_989_pp0_iter47_reg;
        and_ln18_reg_989_pp0_iter49_reg <= and_ln18_reg_989_pp0_iter48_reg;
        and_ln18_reg_989_pp0_iter50_reg <= and_ln18_reg_989_pp0_iter49_reg;
        and_ln18_reg_989_pp0_iter51_reg <= and_ln18_reg_989_pp0_iter50_reg;
        and_ln18_reg_989_pp0_iter52_reg <= and_ln18_reg_989_pp0_iter51_reg;
        and_ln18_reg_989_pp0_iter53_reg <= and_ln18_reg_989_pp0_iter52_reg;
        and_ln18_reg_989_pp0_iter54_reg <= and_ln18_reg_989_pp0_iter53_reg;
        and_ln18_reg_989_pp0_iter55_reg <= and_ln18_reg_989_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln20_2_reg_993_pp0_iter18_reg <= bitcast_ln20_2_reg_993;
        bitcast_ln20_2_reg_993_pp0_iter19_reg <= bitcast_ln20_2_reg_993_pp0_iter18_reg;
        bitcast_ln20_2_reg_993_pp0_iter20_reg <= bitcast_ln20_2_reg_993_pp0_iter19_reg;
        bitcast_ln20_2_reg_993_pp0_iter21_reg <= bitcast_ln20_2_reg_993_pp0_iter20_reg;
        bitcast_ln20_2_reg_993_pp0_iter22_reg <= bitcast_ln20_2_reg_993_pp0_iter21_reg;
        bitcast_ln20_2_reg_993_pp0_iter23_reg <= bitcast_ln20_2_reg_993_pp0_iter22_reg;
        bitcast_ln20_2_reg_993_pp0_iter24_reg <= bitcast_ln20_2_reg_993_pp0_iter23_reg;
        bitcast_ln20_2_reg_993_pp0_iter25_reg <= bitcast_ln20_2_reg_993_pp0_iter24_reg;
        bitcast_ln20_2_reg_993_pp0_iter26_reg <= bitcast_ln20_2_reg_993_pp0_iter25_reg;
        bitcast_ln20_2_reg_993_pp0_iter27_reg <= bitcast_ln20_2_reg_993_pp0_iter26_reg;
        bitcast_ln20_2_reg_993_pp0_iter28_reg <= bitcast_ln20_2_reg_993_pp0_iter27_reg;
        bitcast_ln20_2_reg_993_pp0_iter29_reg <= bitcast_ln20_2_reg_993_pp0_iter28_reg;
        bitcast_ln20_2_reg_993_pp0_iter30_reg <= bitcast_ln20_2_reg_993_pp0_iter29_reg;
        bitcast_ln20_2_reg_993_pp0_iter31_reg <= bitcast_ln20_2_reg_993_pp0_iter30_reg;
        bitcast_ln20_reg_1022_pp0_iter39_reg <= bitcast_ln20_reg_1022;
        bitcast_ln20_reg_1022_pp0_iter40_reg <= bitcast_ln20_reg_1022_pp0_iter39_reg;
        bitcast_ln20_reg_1022_pp0_iter41_reg <= bitcast_ln20_reg_1022_pp0_iter40_reg;
        bitcast_ln20_reg_1022_pp0_iter42_reg <= bitcast_ln20_reg_1022_pp0_iter41_reg;
        bitcast_ln20_reg_1022_pp0_iter43_reg <= bitcast_ln20_reg_1022_pp0_iter42_reg;
        bitcast_ln20_reg_1022_pp0_iter44_reg <= bitcast_ln20_reg_1022_pp0_iter43_reg;
        bitcast_ln20_reg_1022_pp0_iter45_reg <= bitcast_ln20_reg_1022_pp0_iter44_reg;
        bitcast_ln20_reg_1022_pp0_iter46_reg <= bitcast_ln20_reg_1022_pp0_iter45_reg;
        bitcast_ln20_reg_1022_pp0_iter47_reg <= bitcast_ln20_reg_1022_pp0_iter46_reg;
        bitcast_ln20_reg_1022_pp0_iter48_reg <= bitcast_ln20_reg_1022_pp0_iter47_reg;
        bitcast_ln20_reg_1022_pp0_iter49_reg <= bitcast_ln20_reg_1022_pp0_iter48_reg;
        bitcast_ln20_reg_1022_pp0_iter50_reg <= bitcast_ln20_reg_1022_pp0_iter49_reg;
        bitcast_ln20_reg_1022_pp0_iter51_reg <= bitcast_ln20_reg_1022_pp0_iter50_reg;
        bitcast_ln20_reg_1022_pp0_iter52_reg <= bitcast_ln20_reg_1022_pp0_iter51_reg;
        bitcast_ln20_reg_1022_pp0_iter53_reg <= bitcast_ln20_reg_1022_pp0_iter52_reg;
        bitcast_ln20_reg_1022_pp0_iter54_reg <= bitcast_ln20_reg_1022_pp0_iter53_reg;
        bitcast_ln20_reg_1022_pp0_iter55_reg <= bitcast_ln20_reg_1022_pp0_iter54_reg;
        empty_10_reg_858_pp0_iter2_reg <= empty_10_reg_858_pp0_iter1_reg;
        empty_10_reg_858_pp0_iter3_reg <= empty_10_reg_858_pp0_iter2_reg;
        empty_11_reg_863_pp0_iter2_reg <= empty_11_reg_863_pp0_iter1_reg;
        empty_11_reg_863_pp0_iter3_reg <= empty_11_reg_863_pp0_iter2_reg;
        empty_12_reg_868_pp0_iter2_reg <= empty_12_reg_868_pp0_iter1_reg;
        empty_12_reg_868_pp0_iter3_reg <= empty_12_reg_868_pp0_iter2_reg;
        empty_13_reg_873_pp0_iter2_reg <= empty_13_reg_873_pp0_iter1_reg;
        empty_13_reg_873_pp0_iter3_reg <= empty_13_reg_873_pp0_iter2_reg;
        empty_14_reg_878_pp0_iter2_reg <= empty_14_reg_878_pp0_iter1_reg;
        empty_14_reg_878_pp0_iter3_reg <= empty_14_reg_878_pp0_iter2_reg;
        empty_23_reg_883_pp0_iter2_reg <= empty_23_reg_883_pp0_iter1_reg;
        empty_23_reg_883_pp0_iter3_reg <= empty_23_reg_883_pp0_iter2_reg;
        empty_24_reg_888_pp0_iter2_reg <= empty_24_reg_888_pp0_iter1_reg;
        empty_24_reg_888_pp0_iter3_reg <= empty_24_reg_888_pp0_iter2_reg;
        empty_25_reg_893_pp0_iter2_reg <= empty_25_reg_893_pp0_iter1_reg;
        empty_25_reg_893_pp0_iter3_reg <= empty_25_reg_893_pp0_iter2_reg;
        empty_26_reg_898_pp0_iter2_reg <= empty_26_reg_898_pp0_iter1_reg;
        empty_26_reg_898_pp0_iter3_reg <= empty_26_reg_898_pp0_iter2_reg;
        empty_27_reg_903_pp0_iter2_reg <= empty_27_reg_903_pp0_iter1_reg;
        empty_27_reg_903_pp0_iter3_reg <= empty_27_reg_903_pp0_iter2_reg;
        empty_28_reg_908_pp0_iter2_reg <= empty_28_reg_908_pp0_iter1_reg;
        empty_28_reg_908_pp0_iter3_reg <= empty_28_reg_908_pp0_iter2_reg;
        empty_29_reg_913_pp0_iter2_reg <= empty_29_reg_913_pp0_iter1_reg;
        empty_29_reg_913_pp0_iter3_reg <= empty_29_reg_913_pp0_iter2_reg;
        empty_30_reg_918_pp0_iter2_reg <= empty_30_reg_918_pp0_iter1_reg;
        empty_30_reg_918_pp0_iter3_reg <= empty_30_reg_918_pp0_iter2_reg;
        empty_8_reg_848_pp0_iter2_reg <= empty_8_reg_848_pp0_iter1_reg;
        empty_8_reg_848_pp0_iter3_reg <= empty_8_reg_848_pp0_iter2_reg;
        empty_9_reg_853_pp0_iter2_reg <= empty_9_reg_853_pp0_iter1_reg;
        empty_9_reg_853_pp0_iter3_reg <= empty_9_reg_853_pp0_iter2_reg;
        empty_reg_843_pp0_iter2_reg <= empty_reg_843_pp0_iter1_reg;
        empty_reg_843_pp0_iter3_reg <= empty_reg_843_pp0_iter2_reg;
        i_1_reg_923_pp0_iter2_reg <= i_1_reg_923_pp0_iter1_reg;
        i_1_reg_923_pp0_iter3_reg <= i_1_reg_923_pp0_iter2_reg;
        mul1_reg_999_pp0_iter18_reg <= mul1_reg_999;
        mul1_reg_999_pp0_iter19_reg <= mul1_reg_999_pp0_iter18_reg;
        mul1_reg_999_pp0_iter20_reg <= mul1_reg_999_pp0_iter19_reg;
        mul1_reg_999_pp0_iter21_reg <= mul1_reg_999_pp0_iter20_reg;
        mul1_reg_999_pp0_iter22_reg <= mul1_reg_999_pp0_iter21_reg;
        mul1_reg_999_pp0_iter23_reg <= mul1_reg_999_pp0_iter22_reg;
        mul1_reg_999_pp0_iter24_reg <= mul1_reg_999_pp0_iter23_reg;
        mul1_reg_999_pp0_iter25_reg <= mul1_reg_999_pp0_iter24_reg;
        mul1_reg_999_pp0_iter26_reg <= mul1_reg_999_pp0_iter25_reg;
        mul1_reg_999_pp0_iter27_reg <= mul1_reg_999_pp0_iter26_reg;
        mul1_reg_999_pp0_iter28_reg <= mul1_reg_999_pp0_iter27_reg;
        mul1_reg_999_pp0_iter29_reg <= mul1_reg_999_pp0_iter28_reg;
        mul1_reg_999_pp0_iter30_reg <= mul1_reg_999_pp0_iter29_reg;
        mul1_reg_999_pp0_iter31_reg <= mul1_reg_999_pp0_iter30_reg;
        mul1_reg_999_pp0_iter32_reg <= mul1_reg_999_pp0_iter31_reg;
        mul1_reg_999_pp0_iter33_reg <= mul1_reg_999_pp0_iter32_reg;
        mul1_reg_999_pp0_iter34_reg <= mul1_reg_999_pp0_iter33_reg;
        mul1_reg_999_pp0_iter35_reg <= mul1_reg_999_pp0_iter34_reg;
        mul3_reg_948 <= grp_fu_524_p2;
        mul6_reg_967 <= grp_fu_533_p2;
        mul_reg_962 <= grp_fu_529_p2;
        or_ln13_reg_980 <= or_ln13_fu_778_p2;
        temp_A_reg_934_pp0_iter10_reg <= temp_A_reg_934_pp0_iter9_reg;
        temp_A_reg_934_pp0_iter11_reg <= temp_A_reg_934_pp0_iter10_reg;
        temp_A_reg_934_pp0_iter12_reg <= temp_A_reg_934_pp0_iter11_reg;
        temp_A_reg_934_pp0_iter13_reg <= temp_A_reg_934_pp0_iter12_reg;
        temp_A_reg_934_pp0_iter2_reg <= temp_A_reg_934_pp0_iter1_reg;
        temp_A_reg_934_pp0_iter3_reg <= temp_A_reg_934_pp0_iter2_reg;
        temp_A_reg_934_pp0_iter4_reg <= temp_A_reg_934_pp0_iter3_reg;
        temp_A_reg_934_pp0_iter5_reg <= temp_A_reg_934_pp0_iter4_reg;
        temp_A_reg_934_pp0_iter6_reg <= temp_A_reg_934_pp0_iter5_reg;
        temp_A_reg_934_pp0_iter7_reg <= temp_A_reg_934_pp0_iter6_reg;
        temp_A_reg_934_pp0_iter8_reg <= temp_A_reg_934_pp0_iter7_reg;
        temp_A_reg_934_pp0_iter9_reg <= temp_A_reg_934_pp0_iter8_reg;
        temp_B_reg_940 <= temp_B_fu_712_p10;
        temp_B_reg_940_pp0_iter10_reg <= temp_B_reg_940_pp0_iter9_reg;
        temp_B_reg_940_pp0_iter11_reg <= temp_B_reg_940_pp0_iter10_reg;
        temp_B_reg_940_pp0_iter12_reg <= temp_B_reg_940_pp0_iter11_reg;
        temp_B_reg_940_pp0_iter13_reg <= temp_B_reg_940_pp0_iter12_reg;
        temp_B_reg_940_pp0_iter14_reg <= temp_B_reg_940_pp0_iter13_reg;
        temp_B_reg_940_pp0_iter15_reg <= temp_B_reg_940_pp0_iter14_reg;
        temp_B_reg_940_pp0_iter16_reg <= temp_B_reg_940_pp0_iter15_reg;
        temp_B_reg_940_pp0_iter17_reg <= temp_B_reg_940_pp0_iter16_reg;
        temp_B_reg_940_pp0_iter18_reg <= temp_B_reg_940_pp0_iter17_reg;
        temp_B_reg_940_pp0_iter19_reg <= temp_B_reg_940_pp0_iter18_reg;
        temp_B_reg_940_pp0_iter20_reg <= temp_B_reg_940_pp0_iter19_reg;
        temp_B_reg_940_pp0_iter21_reg <= temp_B_reg_940_pp0_iter20_reg;
        temp_B_reg_940_pp0_iter22_reg <= temp_B_reg_940_pp0_iter21_reg;
        temp_B_reg_940_pp0_iter23_reg <= temp_B_reg_940_pp0_iter22_reg;
        temp_B_reg_940_pp0_iter24_reg <= temp_B_reg_940_pp0_iter23_reg;
        temp_B_reg_940_pp0_iter25_reg <= temp_B_reg_940_pp0_iter24_reg;
        temp_B_reg_940_pp0_iter26_reg <= temp_B_reg_940_pp0_iter25_reg;
        temp_B_reg_940_pp0_iter27_reg <= temp_B_reg_940_pp0_iter26_reg;
        temp_B_reg_940_pp0_iter28_reg <= temp_B_reg_940_pp0_iter27_reg;
        temp_B_reg_940_pp0_iter29_reg <= temp_B_reg_940_pp0_iter28_reg;
        temp_B_reg_940_pp0_iter30_reg <= temp_B_reg_940_pp0_iter29_reg;
        temp_B_reg_940_pp0_iter31_reg <= temp_B_reg_940_pp0_iter30_reg;
        temp_B_reg_940_pp0_iter5_reg <= temp_B_reg_940;
        temp_B_reg_940_pp0_iter6_reg <= temp_B_reg_940_pp0_iter5_reg;
        temp_B_reg_940_pp0_iter7_reg <= temp_B_reg_940_pp0_iter6_reg;
        temp_B_reg_940_pp0_iter8_reg <= temp_B_reg_940_pp0_iter7_reg;
        temp_B_reg_940_pp0_iter9_reg <= temp_B_reg_940_pp0_iter8_reg;
        tmp_reg_953 <= tmp_fu_725_p10;
        trunc_ln10_reg_958 <= trunc_ln10_fu_738_p1;
        trunc_ln10_reg_958_pp0_iter10_reg <= trunc_ln10_reg_958_pp0_iter9_reg;
        trunc_ln10_reg_958_pp0_iter11_reg <= trunc_ln10_reg_958_pp0_iter10_reg;
        trunc_ln10_reg_958_pp0_iter12_reg <= trunc_ln10_reg_958_pp0_iter11_reg;
        trunc_ln10_reg_958_pp0_iter13_reg <= trunc_ln10_reg_958_pp0_iter12_reg;
        trunc_ln10_reg_958_pp0_iter14_reg <= trunc_ln10_reg_958_pp0_iter13_reg;
        trunc_ln10_reg_958_pp0_iter15_reg <= trunc_ln10_reg_958_pp0_iter14_reg;
        trunc_ln10_reg_958_pp0_iter16_reg <= trunc_ln10_reg_958_pp0_iter15_reg;
        trunc_ln10_reg_958_pp0_iter17_reg <= trunc_ln10_reg_958_pp0_iter16_reg;
        trunc_ln10_reg_958_pp0_iter18_reg <= trunc_ln10_reg_958_pp0_iter17_reg;
        trunc_ln10_reg_958_pp0_iter19_reg <= trunc_ln10_reg_958_pp0_iter18_reg;
        trunc_ln10_reg_958_pp0_iter20_reg <= trunc_ln10_reg_958_pp0_iter19_reg;
        trunc_ln10_reg_958_pp0_iter21_reg <= trunc_ln10_reg_958_pp0_iter20_reg;
        trunc_ln10_reg_958_pp0_iter22_reg <= trunc_ln10_reg_958_pp0_iter21_reg;
        trunc_ln10_reg_958_pp0_iter23_reg <= trunc_ln10_reg_958_pp0_iter22_reg;
        trunc_ln10_reg_958_pp0_iter24_reg <= trunc_ln10_reg_958_pp0_iter23_reg;
        trunc_ln10_reg_958_pp0_iter25_reg <= trunc_ln10_reg_958_pp0_iter24_reg;
        trunc_ln10_reg_958_pp0_iter26_reg <= trunc_ln10_reg_958_pp0_iter25_reg;
        trunc_ln10_reg_958_pp0_iter27_reg <= trunc_ln10_reg_958_pp0_iter26_reg;
        trunc_ln10_reg_958_pp0_iter28_reg <= trunc_ln10_reg_958_pp0_iter27_reg;
        trunc_ln10_reg_958_pp0_iter29_reg <= trunc_ln10_reg_958_pp0_iter28_reg;
        trunc_ln10_reg_958_pp0_iter30_reg <= trunc_ln10_reg_958_pp0_iter29_reg;
        trunc_ln10_reg_958_pp0_iter31_reg <= trunc_ln10_reg_958_pp0_iter30_reg;
        trunc_ln10_reg_958_pp0_iter32_reg <= trunc_ln10_reg_958_pp0_iter31_reg;
        trunc_ln10_reg_958_pp0_iter33_reg <= trunc_ln10_reg_958_pp0_iter32_reg;
        trunc_ln10_reg_958_pp0_iter34_reg <= trunc_ln10_reg_958_pp0_iter33_reg;
        trunc_ln10_reg_958_pp0_iter35_reg <= trunc_ln10_reg_958_pp0_iter34_reg;
        trunc_ln10_reg_958_pp0_iter36_reg <= trunc_ln10_reg_958_pp0_iter35_reg;
        trunc_ln10_reg_958_pp0_iter37_reg <= trunc_ln10_reg_958_pp0_iter36_reg;
        trunc_ln10_reg_958_pp0_iter38_reg <= trunc_ln10_reg_958_pp0_iter37_reg;
        trunc_ln10_reg_958_pp0_iter39_reg <= trunc_ln10_reg_958_pp0_iter38_reg;
        trunc_ln10_reg_958_pp0_iter40_reg <= trunc_ln10_reg_958_pp0_iter39_reg;
        trunc_ln10_reg_958_pp0_iter41_reg <= trunc_ln10_reg_958_pp0_iter40_reg;
        trunc_ln10_reg_958_pp0_iter42_reg <= trunc_ln10_reg_958_pp0_iter41_reg;
        trunc_ln10_reg_958_pp0_iter43_reg <= trunc_ln10_reg_958_pp0_iter42_reg;
        trunc_ln10_reg_958_pp0_iter44_reg <= trunc_ln10_reg_958_pp0_iter43_reg;
        trunc_ln10_reg_958_pp0_iter45_reg <= trunc_ln10_reg_958_pp0_iter44_reg;
        trunc_ln10_reg_958_pp0_iter46_reg <= trunc_ln10_reg_958_pp0_iter45_reg;
        trunc_ln10_reg_958_pp0_iter47_reg <= trunc_ln10_reg_958_pp0_iter46_reg;
        trunc_ln10_reg_958_pp0_iter48_reg <= trunc_ln10_reg_958_pp0_iter47_reg;
        trunc_ln10_reg_958_pp0_iter49_reg <= trunc_ln10_reg_958_pp0_iter48_reg;
        trunc_ln10_reg_958_pp0_iter50_reg <= trunc_ln10_reg_958_pp0_iter49_reg;
        trunc_ln10_reg_958_pp0_iter51_reg <= trunc_ln10_reg_958_pp0_iter50_reg;
        trunc_ln10_reg_958_pp0_iter52_reg <= trunc_ln10_reg_958_pp0_iter51_reg;
        trunc_ln10_reg_958_pp0_iter53_reg <= trunc_ln10_reg_958_pp0_iter52_reg;
        trunc_ln10_reg_958_pp0_iter54_reg <= trunc_ln10_reg_958_pp0_iter53_reg;
        trunc_ln10_reg_958_pp0_iter55_reg <= trunc_ln10_reg_958_pp0_iter54_reg;
        trunc_ln10_reg_958_pp0_iter5_reg <= trunc_ln10_reg_958;
        trunc_ln10_reg_958_pp0_iter6_reg <= trunc_ln10_reg_958_pp0_iter5_reg;
        trunc_ln10_reg_958_pp0_iter7_reg <= trunc_ln10_reg_958_pp0_iter6_reg;
        trunc_ln10_reg_958_pp0_iter8_reg <= trunc_ln10_reg_958_pp0_iter7_reg;
        trunc_ln10_reg_958_pp0_iter9_reg <= trunc_ln10_reg_958_pp0_iter8_reg;
        x_assign_reg_972 <= grp_fu_512_p2;
        x_assign_reg_972_pp0_iter13_reg <= x_assign_reg_972;
        x_assign_reg_972_pp0_iter14_reg <= x_assign_reg_972_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln13_reg_985) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln18_reg_989 <= and_ln18_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_10_reg_858 <= empty_10_fu_581_p1;
        empty_10_reg_858_pp0_iter1_reg <= empty_10_reg_858;
        empty_11_reg_863 <= empty_11_fu_585_p1;
        empty_11_reg_863_pp0_iter1_reg <= empty_11_reg_863;
        empty_12_reg_868 <= empty_12_fu_589_p1;
        empty_12_reg_868_pp0_iter1_reg <= empty_12_reg_868;
        empty_13_reg_873 <= empty_13_fu_593_p1;
        empty_13_reg_873_pp0_iter1_reg <= empty_13_reg_873;
        empty_14_reg_878 <= empty_14_fu_597_p1;
        empty_14_reg_878_pp0_iter1_reg <= empty_14_reg_878;
        empty_23_reg_883 <= empty_23_fu_633_p1;
        empty_23_reg_883_pp0_iter1_reg <= empty_23_reg_883;
        empty_24_reg_888 <= empty_24_fu_637_p1;
        empty_24_reg_888_pp0_iter1_reg <= empty_24_reg_888;
        empty_25_reg_893 <= empty_25_fu_641_p1;
        empty_25_reg_893_pp0_iter1_reg <= empty_25_reg_893;
        empty_26_reg_898 <= empty_26_fu_645_p1;
        empty_26_reg_898_pp0_iter1_reg <= empty_26_reg_898;
        empty_27_reg_903 <= empty_27_fu_649_p1;
        empty_27_reg_903_pp0_iter1_reg <= empty_27_reg_903;
        empty_28_reg_908 <= empty_28_fu_653_p1;
        empty_28_reg_908_pp0_iter1_reg <= empty_28_reg_908;
        empty_29_reg_913 <= empty_29_fu_657_p1;
        empty_29_reg_913_pp0_iter1_reg <= empty_29_reg_913;
        empty_30_reg_918 <= empty_30_fu_661_p1;
        empty_30_reg_918_pp0_iter1_reg <= empty_30_reg_918;
        empty_8_reg_848 <= empty_8_fu_573_p1;
        empty_8_reg_848_pp0_iter1_reg <= empty_8_reg_848;
        empty_9_reg_853 <= empty_9_fu_577_p1;
        empty_9_reg_853_pp0_iter1_reg <= empty_9_reg_853;
        empty_reg_843 <= empty_fu_569_p1;
        empty_reg_843_pp0_iter1_reg <= empty_reg_843;
        i_1_reg_923 <= ap_sig_allocacmp_i_1;
        i_1_reg_923_pp0_iter1_reg <= i_1_reg_923;
        temp_A_reg_934_pp0_iter1_reg <= temp_A_reg_934;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln13_reg_985_pp0_iter16_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bitcast_ln20_2_reg_993 <= bitcast_ln20_2_fu_804_p1;
        mul1_reg_999 <= grp_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln13_reg_985_pp0_iter37_reg) & (1'd1 == and_ln18_reg_989_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bitcast_ln20_reg_1022 <= bitcast_ln20_fu_808_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln5_fu_673_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_A_reg_934 <= temp_A_fu_685_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln18_reg_989_pp0_iter30_reg) & (1'd0 == and_ln13_reg_985_pp0_iter30_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_D_reg_1006 <= grp_fu_564_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_0_ap_vld = 1'b1;
    end else begin
        D_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_1_ap_vld = 1'b1;
    end else begin
        D_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_2_ap_vld = 1'b1;
    end else begin
        D_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_3_ap_vld = 1'b1;
    end else begin
        D_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_4_ap_vld = 1'b1;
    end else begin
        D_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_5_ap_vld = 1'b1;
    end else begin
        D_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_6_ap_vld = 1'b1;
    end else begin
        D_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln10_reg_958_pp0_iter13_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_7_ap_vld = 1'b1;
    end else begin
        D_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1478)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_0 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_0 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_0 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_0 = 'bx;
        end
    end else begin
        X1_0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_0_ap_vld = 1'b1;
    end else begin
        X1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1483)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_1 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_1 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_1 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_1 = 'bx;
        end
    end else begin
        X1_1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_1_ap_vld = 1'b1;
    end else begin
        X1_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1486)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_2 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_2 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_2 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_2 = 'bx;
        end
    end else begin
        X1_2 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_2_ap_vld = 1'b1;
    end else begin
        X1_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1489)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_3 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_3 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_3 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_3 = 'bx;
        end
    end else begin
        X1_3 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_3_ap_vld = 1'b1;
    end else begin
        X1_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1492)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_4 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_4 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_4 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_4 = 'bx;
        end
    end else begin
        X1_4 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_4_ap_vld = 1'b1;
    end else begin
        X1_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1495)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_5 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_5 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_5 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_5 = 'bx;
        end
    end else begin
        X1_5 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_5_ap_vld = 1'b1;
    end else begin
        X1_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1498)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_6 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_6 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_6 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_6 = 'bx;
        end
    end else begin
        X1_6 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_6_ap_vld = 1'b1;
    end else begin
        X1_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1501)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X1_7 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X1_7 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X1_7 = bitcast_ln29_fu_812_p1;
        end else begin
            X1_7 = 'bx;
        end
    end else begin
        X1_7 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X1_7_ap_vld = 1'b1;
    end else begin
        X1_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1478)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_0 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_0 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_0 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_0 = 'bx;
        end
    end else begin
        X2_0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_0_ap_vld = 1'b1;
    end else begin
        X2_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1483)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_1 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_1 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_1 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_1 = 'bx;
        end
    end else begin
        X2_1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_1_ap_vld = 1'b1;
    end else begin
        X2_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1486)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_2 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_2 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_2 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_2 = 'bx;
        end
    end else begin
        X2_2 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_2_ap_vld = 1'b1;
    end else begin
        X2_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1489)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_3 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_3 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_3 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_3 = 'bx;
        end
    end else begin
        X2_3 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_3_ap_vld = 1'b1;
    end else begin
        X2_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1492)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_4 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_4 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_4 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_4 = 'bx;
        end
    end else begin
        X2_4 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_4_ap_vld = 1'b1;
    end else begin
        X2_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1495)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_5 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_5 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_5 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_5 = 'bx;
        end
    end else begin
        X2_5 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_5_ap_vld = 1'b1;
    end else begin
        X2_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1498)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_6 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_6 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_6 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_6 = 'bx;
        end
    end else begin
        X2_6 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_6_ap_vld = 1'b1;
    end else begin
        X2_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1501)) begin
        if ((1'd1 == and_ln13_reg_985_pp0_iter55_reg)) begin
            X2_7 = 64'd9221120237041090560;
        end else if (((1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg))) begin
            X2_7 = bitcast_ln20_reg_1022_pp0_iter55_reg;
        end else if (((1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg))) begin
            X2_7 = bitcast_ln30_fu_824_p1;
        end else begin
            X2_7 = 'bx;
        end
    end else begin
        X2_7 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'd1 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'd0 == and_ln18_reg_989_pp0_iter55_reg) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'd0 == and_ln13_reg_985_pp0_iter55_reg) & (1'd1 == and_ln18_reg_989_pp0_iter55_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
        X2_7_ap_vld = 1'b1;
    end else begin
        X2_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln5_fu_673_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter55_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_180;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign D_0 = bitcast_ln10_fu_741_p1;

assign D_1 = bitcast_ln10_fu_741_p1;

assign D_2 = bitcast_ln10_fu_741_p1;

assign D_3 = bitcast_ln10_fu_741_p1;

assign D_4 = bitcast_ln10_fu_741_p1;

assign D_5 = bitcast_ln10_fu_741_p1;

assign D_6 = bitcast_ln10_fu_741_p1;

assign D_7 = bitcast_ln10_fu_741_p1;

assign add_ln5_fu_679_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign and_ln13_fu_784_p2 = (or_ln13_fu_778_p2 & grp_fu_554_p2);

assign and_ln18_fu_790_p2 = (or_ln13_reg_980 & grp_fu_559_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1478 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1483 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1486 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1489 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1492 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1495 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1498 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_1501 = ((trunc_ln10_reg_958_pp0_iter55_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter56 == 1'b1));
end

always @ (*) begin
    ap_condition_905 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln10_fu_741_p1 = x_assign_reg_972_pp0_iter13_reg;

assign bitcast_ln20_1_fu_795_p1 = temp_B_reg_940_pp0_iter16_reg;

assign bitcast_ln20_2_fu_804_p1 = xor_ln20_fu_798_p2;

assign bitcast_ln20_fu_808_p1 = grp_fu_542_p2;

assign bitcast_ln29_fu_812_p1 = grp_fu_546_p2;

assign bitcast_ln30_fu_824_p1 = grp_fu_550_p2;

assign empty_10_fu_581_p1 = B_3;

assign empty_11_fu_585_p1 = B_4;

assign empty_12_fu_589_p1 = B_5;

assign empty_13_fu_593_p1 = B_6;

assign empty_14_fu_597_p1 = B_7;

assign empty_23_fu_633_p1 = C_0;

assign empty_24_fu_637_p1 = C_1;

assign empty_25_fu_641_p1 = C_2;

assign empty_26_fu_645_p1 = C_3;

assign empty_27_fu_649_p1 = C_4;

assign empty_28_fu_653_p1 = C_5;

assign empty_29_fu_657_p1 = C_6;

assign empty_30_fu_661_p1 = C_7;

assign empty_8_fu_573_p1 = B_1;

assign empty_9_fu_577_p1 = B_2;

assign empty_fu_569_p1 = B_0;

assign icmp_ln13_1_fu_772_p2 = ((trunc_ln13_fu_762_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_766_p2 = ((tmp_1_fu_752_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln5_fu_673_p2 = ((ap_sig_allocacmp_i_1 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln13_fu_778_p2 = (icmp_ln13_fu_766_p2 | icmp_ln13_1_fu_772_p2);

assign temp_A_fu_685_p1 = A_0;

assign temp_A_fu_685_p2 = A_1;

assign temp_A_fu_685_p3 = A_2;

assign temp_A_fu_685_p4 = A_3;

assign temp_A_fu_685_p5 = A_4;

assign temp_A_fu_685_p6 = A_5;

assign temp_A_fu_685_p7 = A_6;

assign temp_A_fu_685_p8 = A_7;

assign tmp_1_fu_752_p4 = {{bitcast_ln10_fu_741_p1[62:52]}};

assign trunc_ln10_fu_738_p1 = i_1_reg_923_pp0_iter3_reg[2:0];

assign trunc_ln13_fu_762_p1 = bitcast_ln10_fu_741_p1[51:0];

assign xor_ln20_fu_798_p2 = (bitcast_ln20_1_fu_795_p1 ^ 64'd9223372036854775808);

endmodule //kp_502_7
